{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/SystemForLinux/Desktop/f2/code/chat/chatangular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/usuario.service\";\nimport * as i3 from \"src/app/services/mensaje.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction ChatComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const m_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(m_r2.datamensaje);\n  }\n}\n/* import { WebSocketService } from 'src/app/services/WebSocket.service'; */\n\n\nexport class ChatComponent {\n  constructor(router, usuarioService, mensajeService) {\n    this.router = router;\n    this.usuarioService = usuarioService;\n    this.mensajeService = mensajeService;\n    this.listaMensajes = [];\n    this.mensajeEnviar = \"\";\n  }\n  /*   private stompClient: Stomp.Client; */\n\n  /*  webSocketAPI: WebSocketAPI; */\n\n\n  ngOnInit() {\n    this.getSalaDates();\n    setTimeout(() => {\n      this.obaqui();\n      console.log(\"cargando... otra vez\");\n    }, 3000);\n    this.llenarMensajes();\n    this.suscription = this.mensajeService.refresh$.subscribe(() => {\n      this.llenarMensajes();\n      /* this.websocketService.connect() */\n    });\n    /* this.getUsuarioChateando() */\n\n    /*  const socket = new WebSocket('ws://localhost:8080/ws');\r\n     this.stompClient = Stomp.over(socket);\r\n            this.stompClient.connect({}, () => {\r\n       // Subscribe to a topic and handle incoming messages\r\n       this.stompClient.subscribe('/topic/greetings', message => {\r\n         console.log(message.body);\r\n       }); */\n    // Send a message to the server\n\n    /* this.stompClient.send('/app/hello', {}, {\r\n      \"idmensaje\": 0,\r\n      \"datamensaje\": \"m\",\r\n      \"fksalamensaje\": 1,\r\n      \"fkusuariomensaje\": 32\r\n    }); */\n\n    /*  }); */\n  }\n\n  getSalaDates() {\n    let salaDates = JSON.parse(localStorage.getItem('salachat')) || '{}';\n    this.sala = salaDates[0];\n    console.log(this.sala);\n  }\n\n  getUsuarioChateando() {\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        let usuarioChat = JSON.parse(localStorage.getItem(\"usuariochat\"));\n\n        if (usuarioChat) {\n          resolve(usuarioChat);\n        } else {\n          reject(new Error('No se ha encontrado el usuario en el local storage'));\n        }\n      });\n    })();\n  }\n\n  obaqui() {\n    this.getUsuarioChateando().then(usuarioChat => {\n      this.usuarioService.getUsuarioByIdentificador(usuarioChat.identificadorusuario).subscribe(u => {\n        localStorage.setItem(\"usuariochat\", JSON.stringify(u));\n        this.usuario = u;\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  llenarMensajes() {\n    this.listaMensajes = [];\n    this.mensajeService.getMensajesByIdSala(this.sala.idsala).subscribe(mensajes => {\n      for (let m of mensajes) {\n        this.listaMensajes.push(m);\n      }\n    });\n  }\n\n  enviarMensaje() {\n    /* this.websocketService.disconnect() */\n    console.log(this.mensajeEnviar);\n    let mensaje = {\n      idmensaje: 0,\n      datamensaje: this.mensajeEnviar,\n      fksalamensaje: this.sala.idsala,\n      fkusuariomensaje: this.usuario.idusuario\n    };\n    /* this.mensajeService.postMensaje(mensaje) */\n\n    /*  this.mensajeEnviar = \"\" */\n\n    /*  this.sendMessage() */\n  }\n\n  direccionarUrl(donde) {\n    this.router.navigate([donde]);\n  }\n\n}\n\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.MensajeService));\n};\n\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  decls: 16,\n  vars: 3,\n  consts: [[1, \"chat\"], [1, \"chat__header\", \"d-flex\", \"justify-content-between\", \"align-items-center\", \"px-4\", \"py-4\"], [\"type\", \"button\", \"value\", \"Salir\", 1, \"btn\", \"btn-outline-light\", 3, \"click\"], [1, \"chat__box\"], [\"chat\", \"\"], [\"class\", \"msg__box border p-3 d-flex justify-content-start m-3\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"autofocus\", \"\", 1, \"input__autofocus\"], [1, \"chat__footer\"], [1, \"chat__container--input_message\", \"d-flex\", \"justify-content-center\", \"py-3\", \"px-2\", \"border\"], [\"type\", \"text\", \"placeholder\", \"Escribe algo...\", 1, \"border\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn__enviar\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"p-2\", 3, \"click\"], [\"src\", \"../../assets/imgs/enviar.png\", \"alt\", \"boton para enviar\"], [1, \"msg__box\", \"border\", \"p-3\", \"d-flex\", \"justify-content-start\", \"m-3\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h3\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\")(6, \"input\", 2);\n      i0.ɵɵlistener(\"click\", function ChatComponent_Template_input_click_6_listener() {\n        return ctx.direccionarUrl(\"\");\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 3, 4);\n      i0.ɵɵtemplate(9, ChatComponent_div_9_Template, 3, 1, \"div\", 5);\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"div\", 8)(13, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.mensajeEnviar = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_14_listener() {\n        return ctx.enviarMensaje();\n      });\n      i0.ɵɵelement(15, \"img\", 11);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.sala.codigosala);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listaMensajes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.mensajeEnviar);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\".chat[_ngcontent-%COMP%]{\\r\\n    height: 100vh;\\r\\n}\\r\\n.chat__header[_ngcontent-%COMP%]{\\r\\n    background-color: var(--yel);\\r\\n    box-shadow: 0px 0px 20px #c6c6c6;\\r\\n    z-index:100;\\r\\n    position: relative;\\r\\n}\\r\\n.chat__header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{\\r\\n    border-bottom: 3px double white;\\r\\n    color:white;\\r\\n    padding: 5px;\\r\\n    text-shadow: 2px 2px 5px #827501;\\r\\n}\\r\\n.chat__container--input_message[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{\\r\\n    width: 80%;\\r\\n    padding:10px 20px;\\r\\n    border-radius: 10px;\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.chat__footer[_ngcontent-%COMP%]{\\r\\n    border-top: 3px solid #dbdbdb;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    bottom: 0;\\r\\n    z-index:100;\\r\\n    background-color: white;\\r\\n}\\r\\n.chat__box[_ngcontent-%COMP%]{\\r\\n    position: relative;\\r\\n    z-index: 50;\\r\\n    max-height: 400px !important;\\r\\n    overflow: scroll;\\r\\n    overflow-y:scroll ;\\r\\n    overflow-x: hidden;\\r\\n    scroll-behavior:smooth;\\r\\n\\r\\n}\\r\\n.msg__box[_ngcontent-%COMP%]{\\r\\n    background-color: white;\\r\\n    border-radius: 10px;\\r\\n    max-width: 300px;\\r\\n    white-space: pre-wrap;\\r\\n    box-shadow: 5px 5px 5px #e9e9e9;\\r\\n    \\r\\n    \\r\\n\\r\\n}\\r\\n.btn__enviar[_ngcontent-%COMP%]{\\r\\n    border-radius: 100px;\\r\\n    background-color: var(--yel);\\r\\n    border:3px solid #c1c1c1;\\r\\n    margin-left: 10px;\\r\\n\\r\\n}\\r\\n.btn__enviar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{\\r\\n    width: 23px;\\r\\n    filter: drop-shadow(0 2px 5px #ffffff9b);\\r\\n}\\r\\n.btn__enviar[_ngcontent-%COMP%]:hover{\\r\\n    background-color: #ababab;\\r\\n    border:3px solid #4e4d4d;\\r\\n\\r\\n\\r\\n}\\r\\n.input__autofocus[_ngcontent-%COMP%]{\\r\\n    width: 0px;\\r\\n    height: 0px;\\r\\n    border: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLDRCQUE0QjtJQUM1QixnQ0FBZ0M7SUFDaEMsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksK0JBQStCO0lBQy9CLFdBQVc7SUFDWCxZQUFZO0lBQ1osZ0NBQWdDO0FBQ3BDO0FBQ0E7SUFDSSxVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixhQUFhO0FBQ2pCO0FBQ0E7Ozs7R0FJRztBQUNIO0lBQ0ksNkJBQTZCO0lBQzdCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsU0FBUztJQUNULFdBQVc7SUFDWCx1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsNEJBQTRCO0lBQzVCLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLHNCQUFzQjs7QUFFMUI7QUFDQTtJQUNJLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLHFCQUFxQjtJQUNyQiwrQkFBK0I7Ozs7QUFJbkM7QUFDQTtJQUNJLG9CQUFvQjtJQUNwQiw0QkFBNEI7SUFDNUIsd0JBQXdCO0lBQ3hCLGlCQUFpQjs7QUFFckI7QUFDQTtJQUNJLFdBQVc7SUFDWCx3Q0FBd0M7QUFDNUM7QUFDQTtJQUNJLHlCQUF5QjtJQUN6Qix3QkFBd0I7OztBQUc1QjtBQUNBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWCxZQUFZO0FBQ2hCIiwiZmlsZSI6ImNoYXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGF0e1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxufVxyXG4uY2hhdF9faGVhZGVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0teWVsKTtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCAjYzZjNmM2O1xyXG4gICAgei1pbmRleDoxMDA7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuLmNoYXRfX2hlYWRlciBoM3tcclxuICAgIGJvcmRlci1ib3R0b206IDNweCBkb3VibGUgd2hpdGU7XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIHRleHQtc2hhZG93OiAycHggMnB4IDVweCAjODI3NTAxO1xyXG59XHJcbi5jaGF0X19jb250YWluZXItLWlucHV0X21lc3NhZ2UgaW5wdXRbdHlwZT10ZXh0XXtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBwYWRkaW5nOjEwcHggMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG59XHJcbi8qIC5jaGF0X19jb250YWluZXItLWlucHV0X21lc3NhZ2V7XHJcbiAgIFxyXG59XHJcbi5jaGF0X19jb250YWluZXItLWlucHV0X21lc3NhZ2UgaW5wdXRbdHlwZT1idXR0b25de1xyXG59ICovXHJcbi5jaGF0X19mb290ZXJ7XHJcbiAgICBib3JkZXItdG9wOiAzcHggc29saWQgI2RiZGJkYjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgei1pbmRleDoxMDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG4uY2hhdF9fYm94e1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgei1pbmRleDogNTA7XHJcbiAgICBtYXgtaGVpZ2h0OiA0MDBweCAhaW1wb3J0YW50O1xyXG4gICAgb3ZlcmZsb3c6IHNjcm9sbDtcclxuICAgIG92ZXJmbG93LXk6c2Nyb2xsIDtcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAgIHNjcm9sbC1iZWhhdmlvcjpzbW9vdGg7XHJcblxyXG59XHJcbi5tc2dfX2JveHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIG1heC13aWR0aDogMzAwcHg7XHJcbiAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcbiAgICBib3gtc2hhZG93OiA1cHggNXB4IDVweCAjZTllOWU5O1xyXG4gICAgXHJcbiAgICBcclxuXHJcbn1cclxuLmJ0bl9fZW52aWFye1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS15ZWwpO1xyXG4gICAgYm9yZGVyOjNweCBzb2xpZCAjYzFjMWMxO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcblxyXG59XHJcbi5idG5fX2VudmlhciBpbWd7XHJcbiAgICB3aWR0aDogMjNweDtcclxuICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMCAycHggNXB4ICNmZmZmZmY5Yik7XHJcbn1cclxuLmJ0bl9fZW52aWFyOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2FiYWJhYjtcclxuICAgIGJvcmRlcjozcHggc29saWQgIzRlNGQ0ZDtcclxuXHJcblxyXG59XHJcbi5pbnB1dF9fYXV0b2ZvY3Vze1xyXG4gICAgd2lkdGg6IDBweDtcclxuICAgIGhlaWdodDogMHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG5cclxuIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ChatComponent","constructor","router","usuarioService","mensajeService","ngOnInit","getSalaDates","setTimeout","obaqui","console","log","llenarMensajes","suscription","refresh$","subscribe","salaDates","JSON","parse","localStorage","getItem","sala","getUsuarioChateando","Promise","resolve","reject","usuarioChat","Error","then","getUsuarioByIdentificador","identificadorusuario","u","setItem","stringify","usuario","catch","error","listaMensajes","getMensajesByIdSala","idsala","mensajes","m","push","enviarMensaje","mensajeEnviar","mensaje","idmensaje","datamensaje","fksalamensaje","fkusuariomensaje","idusuario","direccionarUrl","donde","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\SystemForLinux\\Desktop\\f2\\code\\chat\\chatangular\\src\\app\\components\\chat\\chat.component.html","C:\\Users\\SystemForLinux\\Desktop\\f2\\code\\chat\\chatangular\\src\\app\\components\\chat\\chat.component.ts"],"sourcesContent":["\n<section class=\"chat\">\n    <div class=\"chat__header d-flex justify-content-between align-items-center px-4 py-4\">\n        <div>\n            <h3>{{sala.codigosala}}</h3>\n        </div>\n        <div>\n            <input type=\"button\" value=\"Salir\" class=\"btn btn-outline-light\" (click)=\"direccionarUrl('')\">\n        </div>\n\n    </div>\n    <div class=\"chat__box\" #chat>\n        <div class=\"msg__box border p-3 d-flex justify-content-start m-3\" *ngFor=\"let m of listaMensajes\">\n            <p>{{m.datamensaje}}</p>\n        </div>\n        <input type=\"text\" autofocus class=\"input__autofocus\">\n    </div>\n  <!--   {{msj}} -->\n    <div class=\"chat__footer\">\n        <div class=\"chat__container--input_message d-flex justify-content-center py-3 px-2 border \">\n            <input type=\"text\" class=\"border\" placeholder=\"Escribe algo...\" [(ngModel)]=\"mensajeEnviar\">\n           <button class=\"btn__enviar d-flex justify-content-center align-items-center p-2\" (click)=\"enviarMensaje()\">\n                <img src=\"../../assets/imgs/enviar.png\"  alt=\"boton para enviar\">\n            </button>\n        </div>\n    </div>\n</section>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport * as Stomp from 'stompjs';\nimport { Mensaje } from 'src/app/models/Mensaje';\nimport { MensajeService } from 'src/app/services/mensaje.service';\nimport { UsuarioService } from 'src/app/services/usuario.service';\nimport { WebSocketAPI } from 'src/app/WebSocketAPI';\nimport { AppComponent } from '../../../../../../../../angular8-springboot-websocket-master/angular8-springboot-websocket-master/front-end/angular8-springboot-websocket/src/app/app.component';\n/* import { WebSocketService } from 'src/app/services/WebSocket.service'; */\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  constructor(private router:Router,\n              private usuarioService:UsuarioService,\n              private mensajeService:MensajeService,\n             /*  private websocketService:WebSocketService */) { }\n/*   private stompClient: Stomp.Client; */\n /*  webSocketAPI: WebSocketAPI; */\n  ngOnInit(): void {\n    this.getSalaDates()\n    setTimeout(() => {\n      this.obaqui()\n      console.log(\"cargando... otra vez\");\n    }, 3000);\n  \n      this.llenarMensajes()\n      this.suscription = this.mensajeService.refresh$.subscribe(()=>{\n        this.llenarMensajes()\n        /* this.websocketService.connect() */\n      })\n   \n    /* this.getUsuarioChateando() */\n   /*  const socket = new WebSocket('ws://localhost:8080/ws');\n    this.stompClient = Stomp.over(socket);\n\n    this.stompClient.connect({}, () => {\n      // Subscribe to a topic and handle incoming messages\n      this.stompClient.subscribe('/topic/greetings', message => {\n        console.log(message.body);\n      }); */\n   \n      // Send a message to the server\n      /* this.stompClient.send('/app/hello', {}, {\n        \"idmensaje\": 0,\n        \"datamensaje\": \"m\",\n        \"fksalamensaje\": 1,\n        \"fkusuariomensaje\": 32\n      }); */\n   /*  }); */\n  }\n\n    /* getUsuarioChateando(){\n      \n       let usuarioChat =   JSON.parse(localStorage.getItem(\"usuariochat\"))\n    console.log(usuarioChat);\n    \n  } */\n /*  connect(){\n    this.webSocketAPI._connect();\n  }\n\n  disconnect(){\n    this.webSocketAPI._disconnect();\n  }\n\n  sendMessage(){\n    this.webSocketAPI._send({\n      \"idmensaje\": 0,\n      \"datamensaje\": \"m\",\n      \"fksalamensaje\": 1,\n      \"fkusuariomensaje\": 32\n    });\n  }\n  msj:any\n  handleMessage(message){\n    this.msj = message;\n  } */\nsala:any\ngetSalaDates(){\n  let salaDates =  JSON.parse(localStorage.getItem('salachat')) || '{}'\n  this.sala = salaDates[0];\n  console.log(this.sala);\n}\nasync getUsuarioChateando(){\n  return new Promise((resolve, reject) => {\n    let usuarioChat = JSON.parse(localStorage.getItem(\"usuariochat\"))\n    if (usuarioChat) {\n      resolve(usuarioChat)\n    } else {\n      reject(new Error('No se ha encontrado el usuario en el local storage'))\n    }\n  })\n}\nusuario:any;\nobaqui(){\n  this.getUsuarioChateando().then((usuarioChat:any) => {\n    this.usuarioService.getUsuarioByIdentificador(usuarioChat.identificadorusuario).subscribe((u:any)=>{\n      localStorage.setItem(\"usuariochat\",JSON.stringify(u));\n      this.usuario = u;\n\n    })\n  }).catch((error:any) => {\n    console.error(error)\n  })\n}\nlistaMensajes = []\nllenarMensajes(){\n  this.listaMensajes = []\n  this.mensajeService.getMensajesByIdSala(this.sala.idsala).subscribe((mensajes:any)=>{\n    for(let m of mensajes){\n      this.listaMensajes.push(m)\n    }\n  })\n}\nmensajeEnviar = \"\"\nsuscription:Subscription;\nenviarMensaje(){\n  /* this.websocketService.disconnect() */\n  console.log(this.mensajeEnviar);\n  let mensaje:Mensaje = {\n    idmensaje:0,\n    datamensaje:this.mensajeEnviar,\n    fksalamensaje:this.sala.idsala,\n    fkusuariomensaje:this.usuario.idusuario,\n  }\n  \n  /* this.mensajeService.postMensaje(mensaje) */\n /*  this.mensajeEnviar = \"\" */\n /*  this.sendMessage() */\n  \n}\n  direccionarUrl(donde:string){\n    this.router.navigate([donde])\n  }\n}\n"]},"metadata":{},"sourceType":"module"}