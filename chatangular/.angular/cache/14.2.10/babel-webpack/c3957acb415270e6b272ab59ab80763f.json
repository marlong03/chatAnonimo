{"ast":null,"code":"'use strict';\n\nconst {\n  tokenChars\n} = require('./validation');\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\n\n\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (i !== 0 && (code === 0x20\n    /* ' ' */\n    || code === 0x09)\n    /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c\n    /* ',' */\n    ) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = {\n  parse\n};","map":{"version":3,"names":["tokenChars","require","parse","header","protocols","Set","start","end","i","length","code","charCodeAt","SyntaxError","protocol","slice","has","add","module","exports"],"sources":["C:/Users/SystemForLinux/Desktop/f2/code/chat/chatangular/node_modules/ws/lib/subprotocol.js"],"sourcesContent":["'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAiBC,OAAO,CAAC,cAAD,CAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,KAAT,CAAeC,MAAf,EAAuB;EACrB,MAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;EACA,IAAIC,KAAK,GAAG,CAAC,CAAb;EACA,IAAIC,GAAG,GAAG,CAAC,CAAX;EACA,IAAIC,CAAC,GAAG,CAAR;;EAEA,KAAKA,CAAL,EAAQA,CAAC,GAAGL,MAAM,CAACM,MAAnB,EAA2BD,CAAC,EAA5B,EAAgC;IAC9B,MAAME,IAAI,GAAGP,MAAM,CAACQ,UAAP,CAAkBH,CAAlB,CAAb;;IAEA,IAAID,GAAG,KAAK,CAAC,CAAT,IAAcP,UAAU,CAACU,IAAD,CAAV,KAAqB,CAAvC,EAA0C;MACxC,IAAIJ,KAAK,KAAK,CAAC,CAAf,EAAkBA,KAAK,GAAGE,CAAR;IACnB,CAFD,MAEO,IACLA,CAAC,KAAK,CAAN,KACCE,IAAI,KAAK;IAAK;IAAd,GAA2BA,IAAI,KAAK,IADrC;IAC2C;IAFtC,EAGL;MACA,IAAIH,GAAG,KAAK,CAAC,CAAT,IAAcD,KAAK,KAAK,CAAC,CAA7B,EAAgCC,GAAG,GAAGC,CAAN;IACjC,CALM,MAKA,IAAIE,IAAI,KAAK;IAAK;IAAlB,EAA6B;MAClC,IAAIJ,KAAK,KAAK,CAAC,CAAf,EAAkB;QAChB,MAAM,IAAIM,WAAJ,CAAiB,iCAAgCJ,CAAE,EAAnD,CAAN;MACD;;MAED,IAAID,GAAG,KAAK,CAAC,CAAb,EAAgBA,GAAG,GAAGC,CAAN;MAEhB,MAAMK,QAAQ,GAAGV,MAAM,CAACW,KAAP,CAAaR,KAAb,EAAoBC,GAApB,CAAjB;;MAEA,IAAIH,SAAS,CAACW,GAAV,CAAcF,QAAd,CAAJ,EAA6B;QAC3B,MAAM,IAAID,WAAJ,CAAiB,QAAOC,QAAS,6BAAjC,CAAN;MACD;;MAEDT,SAAS,CAACY,GAAV,CAAcH,QAAd;MACAP,KAAK,GAAGC,GAAG,GAAG,CAAC,CAAf;IACD,CAfM,MAeA;MACL,MAAM,IAAIK,WAAJ,CAAiB,iCAAgCJ,CAAE,EAAnD,CAAN;IACD;EACF;;EAED,IAAIF,KAAK,KAAK,CAAC,CAAX,IAAgBC,GAAG,KAAK,CAAC,CAA7B,EAAgC;IAC9B,MAAM,IAAIK,WAAJ,CAAgB,yBAAhB,CAAN;EACD;;EAED,MAAMC,QAAQ,GAAGV,MAAM,CAACW,KAAP,CAAaR,KAAb,EAAoBE,CAApB,CAAjB;;EAEA,IAAIJ,SAAS,CAACW,GAAV,CAAcF,QAAd,CAAJ,EAA6B;IAC3B,MAAM,IAAID,WAAJ,CAAiB,QAAOC,QAAS,6BAAjC,CAAN;EACD;;EAEDT,SAAS,CAACY,GAAV,CAAcH,QAAd;EACA,OAAOT,SAAP;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiB;EAAEhB;AAAF,CAAjB"},"metadata":{},"sourceType":"script"}