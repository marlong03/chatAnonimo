{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n/* import { WebSocketAPI } from 'src/app/WebSocketAPI'; */\n\n/* import { AppComponent } from '../../../../../../../../angular8-springboot-websocket-master/angular8-springboot-websocket-master/front-end/angular8-springboot-websocket/src/app/app.component'; */\n\n/* import { WebSocketService } from 'src/app/services/WebSocket.service'; */\n\nlet ChatComponent = class ChatComponent {\n  constructor(router, route, usuarioService, mensajeService, socketService, cookieService) {\n    this.router = router;\n    this.route = route;\n    this.usuarioService = usuarioService;\n    this.mensajeService = mensajeService;\n    this.socketService = socketService;\n    this.cookieService = cookieService;\n    /* async getUsuarioChateando(){\r\n      return new Promise((resolve, reject) => {\r\n        let usuarioChat = JSON.parse(localStorage.getItem(\"usuariochat\"))\r\n        if (usuarioChat) {\r\n          resolve(usuarioChat)\r\n        } else {\r\n          reject(new Error('No se ha encontrado el usuario en el local storage'))\r\n        }\r\n      })\r\n    } */\n\n    this.usuarioSet = JSON.parse(this.cookieService.get('usuariochat'));\n    this.listaMensajes = [];\n    this.mensajeEnviar = \"\";\n    this.codigoChat = route.snapshot.paramMap.get('codigoChat');\n    cookieService.set('codigoChat', this.codigoChat);\n    this.socketService.outEven.subscribe(res => {\n      this.enviarMensaje(false);\n      this.llenarMensajes();\n    });\n  }\n\n  ngAfterViewInit() {\n    console.log(this.codigoChat);\n    this.bajarScroll();\n  }\n\n  bajarScroll() {\n    let chat = document.getElementById('chat');\n    setTimeout(() => {\n      chat.scroll(0, 10000);\n    }, 100);\n  }\n\n  ngOnInit() {\n    this.bajarScroll();\n    /* let socket = io('http://localhost:3000', {\r\n      withCredentials: true,\r\n      extraHeaders: {\r\n        \"my-custom-header\": \"abcd\"\r\n      }\r\n    }); */\n\n    /*  socket.on('msg',function(data:any){\r\n       console.log(data);\r\n       \r\n     }) */\n\n    this.getSalaDates();\n    /* setTimeout(() => { */\n\n    this.setearUsuarioLocalStorage();\n    console.log(\"cargando... otra vez\");\n    /*   }, 3000); */\n\n    this.llenarMensajes();\n    /*   this.suscription = this.mensajeService.refresh$.subscribe(()=>{\r\n        this.llenarMensajes() */\n\n    /* this.websocketService.connect() */\n\n    /*  }) */\n\n    /* this.getUsuarioChateando() */\n\n    /*  const socket = new WebSocket('ws://localhost:8080/ws');\r\n     this.stompClient = Stomp.over(socket);\r\n            this.stompClient.connect({}, () => {\r\n       // Subscribe to a topic and handle incoming messages\r\n       this.stompClient.subscribe('/topic/greetings', message => {\r\n         console.log(message.body);\r\n       }); */\n    // Send a message to the server\n\n    /* this.stompClient.send('/app/hello', {}, {\r\n      \"idmensaje\": 0,\r\n      \"datamensaje\": \"m\",\r\n      \"fksalamensaje\": 1,\r\n      \"fkusuariomensaje\": 32\r\n    }); */\n\n    /*  }); */\n\n    /*  this.socket.on('chat msg',function(msg:any){\r\n      console.log(\"mesnajes sockets\");\r\n      console.log(msg);\r\n      \r\n      \r\n     }) */\n  }\n\n  getSalaDates() {\n    let salaDates = JSON.parse(this.cookieService.get('salachat'));\n    this.sala = salaDates[0];\n    console.log(this.sala);\n  }\n\n  setearUsuarioLocalStorage() {\n    /* this.getUsuarioChateando().then((usuarioChat:any) => { */\n    console.log(this.usuarioSet.identificadorusuario);\n\n    if (this.usuarioSet.identificadorusuario != undefined) {\n      this.usuarioService.getUsuarioByIdentificador(this.usuarioSet.identificadorusuario).subscribe(u => {\n        console.log(u);\n        this.usuario = u[0];\n        console.log(this.usuario);\n        /* this.idUsuario = u[0].idusuario;\r\n        console.log(this.idUsuario); */\n\n        /*  setTimeout(() => { */\n\n        this.cookieService.set(\"usuariochat\", JSON.stringify(u[0]));\n        /*  }, 1000); */\n      });\n    } else {\n      console.log(\"el usuario no se encontro\");\n    }\n    /*  }).catch((error:any) => {\r\n       console.error(error)\r\n     }) */\n\n  }\n\n  llenarMensajes() {\n    this.listaMensajes = [];\n    this.mensajeService.getMensajesByIdSala(this.sala.idsala).subscribe(mensajes => {\n      for (let m of mensajes) {\n        this.listaMensajes.push(m);\n      }\n\n      this.bajarScroll();\n    });\n  }\n\n  enviarMensaje(emit = true) {\n    /* this.websocketService.disconnect() */\n\n    /*   let socket = socketio.io('http://localhost:4200/chat'); */\n\n    /*   socket.emit(\"chat message\",\"mensaje desde angular\") */\n    console.log(this.mensajeEnviar);\n    console.log(this.usuario);\n    let mensaje = {\n      idmensaje: 0,\n      datamensaje: this.mensajeEnviar,\n      fksalamensaje: this.sala.idsala,\n      fkusuariomensaje: this.usuario.idusuario\n    };\n    /* this.socket.emit('chat msg',mensaje) */\n\n    if (emit && this.mensajeEnviar != \"\") {\n      this.mensajeService.postMensaje(mensaje);\n      this.socketService.emitEvent({\n        mensaje\n      });\n      this.mensajeEnviar = \"\";\n    }\n    /*  this.sendMessage() */\n\n  }\n\n  direccionarUrl(donde) {\n    this.router.navigate([donde]);\n  }\n\n};\nChatComponent = __decorate([Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})], ChatComponent);\nexport { ChatComponent };","map":{"version":3,"mappings":"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","names":["Component","ChatComponent","constructor","router","route","usuarioService","mensajeService","socketService","cookieService","JSON","parse","get","codigoChat","snapshot","paramMap","set","outEven","subscribe","res","enviarMensaje","llenarMensajes","ngAfterViewInit","console","log","bajarScroll","chat","document","getElementById","setTimeout","scroll","ngOnInit","getSalaDates","setearUsuarioLocalStorage","salaDates","sala","usuarioSet","identificadorusuario","undefined","getUsuarioByIdentificador","u","usuario","stringify","listaMensajes","getMensajesByIdSala","idsala","mensajes","m","push","emit","mensajeEnviar","mensaje","idmensaje","datamensaje","fksalamensaje","fkusuariomensaje","idusuario","postMensaje","emitEvent","direccionarUrl","donde","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\SystemForLinux\\Desktop\\f2\\code\\chat\\chatangular\\src\\app\\components\\chat\\chat.component.ts"],"sourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n/* import * as Stomp from 'stompjs'; */\nimport { Mensaje } from 'src/app/models/Mensaje';\nimport { MensajeService } from 'src/app/services/mensaje.service';\nimport { UsuarioService } from 'src/app/services/usuario.service';\nimport { WebSocketService } from 'src/app/services/web-socket.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n/* import { WebSocketAPI } from 'src/app/WebSocketAPI'; */\n/* import { AppComponent } from '../../../../../../../../angular8-springboot-websocket-master/angular8-springboot-websocket-master/front-end/angular8-springboot-websocket/src/app/app.component'; */\n/* import { WebSocketService } from 'src/app/services/WebSocket.service'; */\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit,AfterViewInit {\n  codigoChat:string\n  constructor(private router:Router,\n              private route:ActivatedRoute,\n              private usuarioService:UsuarioService,\n              private mensajeService:MensajeService,\n              private socketService:WebSocketService,\n              public cookieService:CookieService) { \n\n                this.codigoChat = route.snapshot.paramMap.get('codigoChat')\n                cookieService.set('codigoChat',this.codigoChat)\n\n\n                this.socketService.outEven.subscribe((res)=>{\n                  this.enviarMensaje(false)\n                  this.llenarMensajes()\n                  \n                })\n              }\n    ngAfterViewInit(): void {\n        console.log(this.codigoChat);\n  this.bajarScroll()\n        \n      }\n     bajarScroll(){\n       let chat = document.getElementById('chat')\n      setTimeout(() => {\n        \n        \n        chat.scroll(0,10000)\n      }, 100);\n     }\n    ngOnInit(): void {\n  this.bajarScroll()\n    /* let socket = io('http://localhost:3000', {\n      withCredentials: true,\n      extraHeaders: {\n        \"my-custom-header\": \"abcd\"\n      }\n    }); */\n   /*  socket.on('msg',function(data:any){\n      console.log(data);\n      \n    }) */\n    this.getSalaDates()\n    /* setTimeout(() => { */\n      this.setearUsuarioLocalStorage()\n      console.log(\"cargando... otra vez\");\n  /*   }, 3000); */\n  \n      this.llenarMensajes()\n    /*   this.suscription = this.mensajeService.refresh$.subscribe(()=>{\n        this.llenarMensajes() */\n        /* this.websocketService.connect() */\n     /*  }) */\n   \n    /* this.getUsuarioChateando() */\n   /*  const socket = new WebSocket('ws://localhost:8080/ws');\n    this.stompClient = Stomp.over(socket);\n\n    this.stompClient.connect({}, () => {\n      // Subscribe to a topic and handle incoming messages\n      this.stompClient.subscribe('/topic/greetings', message => {\n        console.log(message.body);\n      }); */\n   \n      // Send a message to the server\n      /* this.stompClient.send('/app/hello', {}, {\n        \"idmensaje\": 0,\n        \"datamensaje\": \"m\",\n        \"fksalamensaje\": 1,\n        \"fkusuariomensaje\": 32\n      }); */\n   /*  }); */\n  /*  this.socket.on('chat msg',function(msg:any){\n    console.log(\"mesnajes sockets\");\n    console.log(msg);\n    \n    \n   }) */\n  }\n\n   /*  getUsuarioChateando(){\n      \n       let usuarioChat =   JSON.parse(localStorage.getItem(\"usuariochat\"))\n    console.log(usuarioChat);\n    \n  } */\n /*  connect(){\n    this.webSocketAPI._connect();\n  }\n\n  disconnect(){\n    this.webSocketAPI._disconnect();\n  }\n\n  sendMessage(){\n    this.webSocketAPI._send({\n      \"idmensaje\": 0,\n      \"datamensaje\": \"m\",\n      \"fksalamensaje\": 1,\n      \"fkusuariomensaje\": 32\n    });\n  } */\n /*  msj:any\n  handleMessage(message){\n    this.msj = message;\n  } */\nsala:any\ngetSalaDates(){\n  let salaDates =  JSON.parse(this.cookieService.get('salachat')) \n  this.sala = salaDates[0];\n  console.log(this.sala);\n}\n/* async getUsuarioChateando(){\n  return new Promise((resolve, reject) => {\n    let usuarioChat = JSON.parse(localStorage.getItem(\"usuariochat\"))\n    if (usuarioChat) {\n      resolve(usuarioChat)\n    } else {\n      reject(new Error('No se ha encontrado el usuario en el local storage'))\n    }\n  })\n} */\nusuarioSet:any = JSON.parse(this.cookieService.get('usuariochat'));\n/* idUsuario = 0 */\nusuario:any\nsetearUsuarioLocalStorage(){\n  /* this.getUsuarioChateando().then((usuarioChat:any) => { */\n    console.log(this.usuarioSet.identificadorusuario);\n    if(this.usuarioSet.identificadorusuario != undefined){\n\n      this.usuarioService.getUsuarioByIdentificador(this.usuarioSet.identificadorusuario).subscribe((u:any)=>{\n        console.log(u);\n        this.usuario = u[0]\n        console.log(this.usuario);\n        \n        /* this.idUsuario = u[0].idusuario;\n        console.log(this.idUsuario); */\n        \n       /*  setTimeout(() => { */\n          this.cookieService.set(\"usuariochat\",JSON.stringify(u[0]));\n          \n       /*  }, 1000); */\n        \n        \n        \n        \n      })\n    }else{\n      console.log(\"el usuario no se encontro\");\n      \n    }\n /*  }).catch((error:any) => {\n    console.error(error)\n  }) */\n}\nlistaMensajes = []\nllenarMensajes(){\n\n  this.listaMensajes = []\n  this.mensajeService.getMensajesByIdSala(this.sala.idsala).subscribe((mensajes:any)=>{\n    for(let m of mensajes){\n      this.listaMensajes.push(m)\n    }\n    \n    this.bajarScroll()\n  })\n}\nmensajeEnviar = \"\"\nsuscription:Subscription;\n\nenviarMensaje(emit:boolean = true){\n  /* this.websocketService.disconnect() */\n/*   let socket = socketio.io('http://localhost:4200/chat'); */\n/*   socket.emit(\"chat message\",\"mensaje desde angular\") */\n  console.log(this.mensajeEnviar);\n  console.log(this.usuario);\n  \n  let mensaje:Mensaje = {\n    idmensaje:0,\n    datamensaje:this.mensajeEnviar,\n    fksalamensaje:this.sala.idsala,\n    fkusuariomensaje:this.usuario.idusuario,\n  }\n  /* this.socket.emit('chat msg',mensaje) */\n  if(emit && this.mensajeEnviar != \"\"){\n    this.mensajeService.postMensaje(mensaje)\n    this.socketService.emitEvent({mensaje})\n    this.mensajeEnviar = \"\"\n  }\n /*  this.sendMessage() */\n  \n}\n\n  direccionarUrl(donde:string){\n    this.router.navigate([donde])\n  }\n}\n"]},"metadata":{},"sourceType":"module"}