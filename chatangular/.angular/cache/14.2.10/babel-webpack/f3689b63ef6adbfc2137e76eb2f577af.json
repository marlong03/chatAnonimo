{"ast":null,"code":"import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from '../operators/map';\nexport function forkJoin(...sources) {\n  let resultSelector;\n\n  if (typeof sources[sources.length - 1] === 'function') {\n    resultSelector = sources.pop();\n  }\n\n  if (sources.length === 1 && isArray(sources[0])) {\n    sources = sources[0];\n  }\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  if (resultSelector) {\n    return forkJoin(sources).pipe(map(args => resultSelector(...args)));\n  }\n\n  return new Observable(subscriber => {\n    return new ForkJoinSubscriber(subscriber, sources);\n  });\n}\n\nclass ForkJoinSubscriber extends OuterSubscriber {\n  constructor(destination, sources) {\n    super(destination);\n    this.sources = sources;\n    this.completed = 0;\n    this.haveValues = 0;\n    const len = sources.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.values[outerIndex] = innerValue;\n\n    if (!innerSub._hasValue) {\n      innerSub._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub) {\n    const {\n      destination,\n      haveValues,\n      values\n    } = this;\n    const len = values.length;\n\n    if (!innerSub._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      destination.next(values);\n    }\n\n    destination.complete();\n  }\n\n}","map":{"version":3,"names":["Observable","isArray","EMPTY","subscribeToResult","OuterSubscriber","map","forkJoin","sources","resultSelector","length","pop","pipe","args","subscriber","ForkJoinSubscriber","constructor","destination","completed","haveValues","len","values","Array","i","source","innerSubscription","add","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","_hasValue","notifyComplete","complete","next"],"sources":["C:/Users/SystemForLinux/Desktop/angular8-springboot-websocket-master/angular8-springboot-websocket-master/front-end/angular8-springboot-websocket/node_modules/rxjs/_esm2015/internal/observable/forkJoin.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from '../operators/map';\nexport function forkJoin(...sources) {\n    let resultSelector;\n    if (typeof sources[sources.length - 1] === 'function') {\n        resultSelector = sources.pop();\n    }\n    if (sources.length === 1 && isArray(sources[0])) {\n        sources = sources[0];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    if (resultSelector) {\n        return forkJoin(sources).pipe(map(args => resultSelector(...args)));\n    }\n    return new Observable(subscriber => {\n        return new ForkJoinSubscriber(subscriber, sources);\n    });\n}\nclass ForkJoinSubscriber extends OuterSubscriber {\n    constructor(destination, sources) {\n        super(destination);\n        this.sources = sources;\n        this.completed = 0;\n        this.haveValues = 0;\n        const len = sources.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            const source = sources[i];\n            const innerSubscription = subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                this.add(innerSubscription);\n            }\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    }\n    notifyComplete(innerSub) {\n        const { destination, haveValues, values } = this;\n        const len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            destination.next(values);\n        }\n        destination.complete();\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAO,SAASC,QAAT,CAAkB,GAAGC,OAArB,EAA8B;EACjC,IAAIC,cAAJ;;EACA,IAAI,OAAOD,OAAO,CAACA,OAAO,CAACE,MAAR,GAAiB,CAAlB,CAAd,KAAuC,UAA3C,EAAuD;IACnDD,cAAc,GAAGD,OAAO,CAACG,GAAR,EAAjB;EACH;;EACD,IAAIH,OAAO,CAACE,MAAR,KAAmB,CAAnB,IAAwBR,OAAO,CAACM,OAAO,CAAC,CAAD,CAAR,CAAnC,EAAiD;IAC7CA,OAAO,GAAGA,OAAO,CAAC,CAAD,CAAjB;EACH;;EACD,IAAIA,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;IACtB,OAAOP,KAAP;EACH;;EACD,IAAIM,cAAJ,EAAoB;IAChB,OAAOF,QAAQ,CAACC,OAAD,CAAR,CAAkBI,IAAlB,CAAuBN,GAAG,CAACO,IAAI,IAAIJ,cAAc,CAAC,GAAGI,IAAJ,CAAvB,CAA1B,CAAP;EACH;;EACD,OAAO,IAAIZ,UAAJ,CAAea,UAAU,IAAI;IAChC,OAAO,IAAIC,kBAAJ,CAAuBD,UAAvB,EAAmCN,OAAnC,CAAP;EACH,CAFM,CAAP;AAGH;;AACD,MAAMO,kBAAN,SAAiCV,eAAjC,CAAiD;EAC7CW,WAAW,CAACC,WAAD,EAAcT,OAAd,EAAuB;IAC9B,MAAMS,WAAN;IACA,KAAKT,OAAL,GAAeA,OAAf;IACA,KAAKU,SAAL,GAAiB,CAAjB;IACA,KAAKC,UAAL,GAAkB,CAAlB;IACA,MAAMC,GAAG,GAAGZ,OAAO,CAACE,MAApB;IACA,KAAKW,MAAL,GAAc,IAAIC,KAAJ,CAAUF,GAAV,CAAd;;IACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;MAC1B,MAAMC,MAAM,GAAGhB,OAAO,CAACe,CAAD,CAAtB;MACA,MAAME,iBAAiB,GAAGrB,iBAAiB,CAAC,IAAD,EAAOoB,MAAP,EAAe,IAAf,EAAqBD,CAArB,CAA3C;;MACA,IAAIE,iBAAJ,EAAuB;QACnB,KAAKC,GAAL,CAASD,iBAAT;MACH;IACJ;EACJ;;EACDE,UAAU,CAACC,UAAD,EAAaC,UAAb,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2D;IACjE,KAAKX,MAAL,CAAYS,UAAZ,IAA0BD,UAA1B;;IACA,IAAI,CAACG,QAAQ,CAACC,SAAd,EAAyB;MACrBD,QAAQ,CAACC,SAAT,GAAqB,IAArB;MACA,KAAKd,UAAL;IACH;EACJ;;EACDe,cAAc,CAACF,QAAD,EAAW;IACrB,MAAM;MAAEf,WAAF;MAAeE,UAAf;MAA2BE;IAA3B,IAAsC,IAA5C;IACA,MAAMD,GAAG,GAAGC,MAAM,CAACX,MAAnB;;IACA,IAAI,CAACsB,QAAQ,CAACC,SAAd,EAAyB;MACrBhB,WAAW,CAACkB,QAAZ;MACA;IACH;;IACD,KAAKjB,SAAL;;IACA,IAAI,KAAKA,SAAL,KAAmBE,GAAvB,EAA4B;MACxB;IACH;;IACD,IAAID,UAAU,KAAKC,GAAnB,EAAwB;MACpBH,WAAW,CAACmB,IAAZ,CAAiBf,MAAjB;IACH;;IACDJ,WAAW,CAACkB,QAAZ;EACH;;AAtC4C"},"metadata":{},"sourceType":"module"}