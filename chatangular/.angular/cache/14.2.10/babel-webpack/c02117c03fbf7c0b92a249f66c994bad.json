{"ast":null,"code":"import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport class Subscription {\n  constructor(unsubscribe) {\n    this.closed = false;\n    this._parent = null;\n    this._parents = null;\n    this._subscriptions = null;\n\n    if (unsubscribe) {\n      this._unsubscribe = unsubscribe;\n    }\n  }\n\n  unsubscribe() {\n    let hasErrors = false;\n    let errors;\n\n    if (this.closed) {\n      return;\n    }\n\n    let {\n      _parent,\n      _parents,\n      _unsubscribe,\n      _subscriptions\n    } = this;\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    this._subscriptions = null;\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    while (_parent) {\n      _parent.remove(this);\n\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        hasErrors = true;\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            hasErrors = true;\n            errors = errors || [];\n\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  add(teardown) {\n    let subscription = teardown;\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(teardown);\n\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n\n        break;\n\n      default:\n        {\n          if (!teardown) {\n            return Subscription.EMPTY;\n          }\n\n          throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n    }\n\n    if (subscription._addParent(this)) {\n      const subscriptions = this._subscriptions;\n\n      if (subscriptions) {\n        subscriptions.push(subscription);\n      } else {\n        this._subscriptions = [subscription];\n      }\n    }\n\n    return subscription;\n  }\n\n  remove(subscription) {\n    const subscriptions = this._subscriptions;\n\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  _addParent(parent) {\n    let {\n      _parent,\n      _parents\n    } = this;\n\n    if (_parent === parent) {\n      return false;\n    } else if (!_parent) {\n      this._parent = parent;\n      return true;\n    } else if (!_parents) {\n      this._parents = [parent];\n      return true;\n    } else if (_parents.indexOf(parent) === -1) {\n      _parents.push(parent);\n\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nSubscription.EMPTY = function (empty) {\n  empty.closed = true;\n  return empty;\n}(new Subscription());\n\nfunction flattenUnsubscriptionErrors(errors) {\n  return errors.reduce((errs, err) => errs.concat(err instanceof UnsubscriptionError ? err.errors : err), []);\n}","map":{"version":3,"names":["isArray","isObject","isFunction","UnsubscriptionError","Subscription","constructor","unsubscribe","closed","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","errors","index","len","length","remove","call","e","flattenUnsubscriptionErrors","sub","concat","push","add","teardown","subscription","tmp","EMPTY","Error","_addParent","subscriptions","subscriptionIndex","indexOf","splice","parent","empty","reduce","errs","err"],"sources":["C:/Users/SystemForLinux/Desktop/angular8-springboot-websocket-master/angular8-springboot-websocket-master/front-end/angular8-springboot-websocket/node_modules/rxjs/_esm2015/internal/Subscription.js"],"sourcesContent":["import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport class Subscription {\n    constructor(unsubscribe) {\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    unsubscribe() {\n        let hasErrors = false;\n        let errors;\n        if (this.closed) {\n            return;\n        }\n        let { _parent, _parents, _unsubscribe, _subscriptions } = this;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        let index = -1;\n        let len = _parents ? _parents.length : 0;\n        while (_parent) {\n            _parent.remove(this);\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                hasErrors = true;\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                const sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    }\n    add(teardown) {\n        let subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    const tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                if (!teardown) {\n                    return Subscription.EMPTY;\n                }\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        if (subscription._addParent(this)) {\n            const subscriptions = this._subscriptions;\n            if (subscriptions) {\n                subscriptions.push(subscription);\n            }\n            else {\n                this._subscriptions = [subscription];\n            }\n        }\n        return subscription;\n    }\n    remove(subscription) {\n        const subscriptions = this._subscriptions;\n        if (subscriptions) {\n            const subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    }\n    _addParent(parent) {\n        let { _parent, _parents } = this;\n        if (_parent === parent) {\n            return false;\n        }\n        else if (!_parent) {\n            this._parent = parent;\n            return true;\n        }\n        else if (!_parents) {\n            this._parents = [parent];\n            return true;\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            _parents.push(parent);\n            return true;\n        }\n        return false;\n    }\n}\nSubscription.EMPTY = (function (empty) {\n    empty.closed = true;\n    return empty;\n}(new Subscription()));\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}