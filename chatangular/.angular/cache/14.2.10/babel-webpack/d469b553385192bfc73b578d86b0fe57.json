{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/SystemForLinux/Desktop/f2/code/chat/chatangular/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Server = exports.BaseServer = void 0;\n\nconst qs = require(\"querystring\");\n\nconst url_1 = require(\"url\");\n\nconst base64id = require(\"base64id\");\n\nconst transports_1 = require(\"./transports\");\n\nconst events_1 = require(\"events\");\n\nconst socket_1 = require(\"./socket\");\n\nconst debug_1 = require(\"debug\");\n\nconst cookie_1 = require(\"cookie\");\n\nconst ws_1 = require(\"ws\");\n\nconst debug = (0, debug_1.default)(\"engine\");\n\nclass BaseServer extends events_1.EventEmitter {\n  /**\n   * Server constructor.\n   *\n   * @param {Object} opts - options\n   * @api public\n   */\n  constructor(opts = {}) {\n    super();\n    this.clients = {};\n    this.clientsCount = 0;\n    this.opts = Object.assign({\n      wsEngine: ws_1.Server,\n      pingTimeout: 20000,\n      pingInterval: 25000,\n      upgradeTimeout: 10000,\n      maxHttpBufferSize: 1e6,\n      transports: Object.keys(transports_1.default),\n      allowUpgrades: true,\n      httpCompression: {\n        threshold: 1024\n      },\n      cors: false,\n      allowEIO3: false\n    }, opts);\n\n    if (opts.cookie) {\n      this.opts.cookie = Object.assign({\n        name: \"io\",\n        path: \"/\",\n        // @ts-ignore\n        httpOnly: opts.cookie.path !== false,\n        sameSite: \"lax\"\n      }, opts.cookie);\n    }\n\n    if (this.opts.cors) {\n      this.corsMiddleware = require(\"cors\")(this.opts.cors);\n    }\n\n    if (opts.perMessageDeflate) {\n      this.opts.perMessageDeflate = Object.assign({\n        threshold: 1024\n      }, opts.perMessageDeflate);\n    }\n\n    this.init();\n  }\n  /**\n   * Returns a list of available transports for upgrade given a certain transport.\n   *\n   * @return {Array}\n   * @api public\n   */\n\n\n  upgrades(transport) {\n    if (!this.opts.allowUpgrades) return [];\n    return transports_1.default[transport].upgradesTo || [];\n  }\n  /**\n   * Verifies a request.\n   *\n   * @param {http.IncomingMessage}\n   * @return {Boolean} whether the request is valid\n   * @api private\n   */\n\n\n  verify(req, upgrade, fn) {\n    // transport check\n    const transport = req._query.transport;\n\n    if (!~this.opts.transports.indexOf(transport)) {\n      debug('unknown transport \"%s\"', transport);\n      return fn(Server.errors.UNKNOWN_TRANSPORT, {\n        transport\n      });\n    } // 'Origin' header check\n\n\n    const isOriginInvalid = checkInvalidHeaderChar(req.headers.origin);\n\n    if (isOriginInvalid) {\n      const origin = req.headers.origin;\n      req.headers.origin = null;\n      debug(\"origin header invalid\");\n      return fn(Server.errors.BAD_REQUEST, {\n        name: \"INVALID_ORIGIN\",\n        origin\n      });\n    } // sid check\n\n\n    const sid = req._query.sid;\n\n    if (sid) {\n      if (!this.clients.hasOwnProperty(sid)) {\n        debug('unknown sid \"%s\"', sid);\n        return fn(Server.errors.UNKNOWN_SID, {\n          sid\n        });\n      }\n\n      const previousTransport = this.clients[sid].transport.name;\n\n      if (!upgrade && previousTransport !== transport) {\n        debug(\"bad request: unexpected transport without upgrade\");\n        return fn(Server.errors.BAD_REQUEST, {\n          name: \"TRANSPORT_MISMATCH\",\n          transport,\n          previousTransport\n        });\n      }\n    } else {\n      // handshake is GET only\n      if (\"GET\" !== req.method) {\n        return fn(Server.errors.BAD_HANDSHAKE_METHOD, {\n          method: req.method\n        });\n      }\n\n      if (transport === \"websocket\" && !upgrade) {\n        debug(\"invalid transport upgrade\");\n        return fn(Server.errors.BAD_REQUEST, {\n          name: \"TRANSPORT_HANDSHAKE_ERROR\"\n        });\n      }\n\n      if (!this.opts.allowRequest) return fn();\n      return this.opts.allowRequest(req, (message, success) => {\n        if (!success) {\n          return fn(Server.errors.FORBIDDEN, {\n            message\n          });\n        }\n\n        fn();\n      });\n    }\n\n    fn();\n  }\n  /**\n   * Closes all clients.\n   *\n   * @api public\n   */\n\n\n  close() {\n    debug(\"closing all open clients\");\n\n    for (let i in this.clients) {\n      if (this.clients.hasOwnProperty(i)) {\n        this.clients[i].close(true);\n      }\n    }\n\n    this.cleanup();\n    return this;\n  }\n  /**\n   * generate a socket id.\n   * Overwrite this method to generate your custom socket id\n   *\n   * @param {Object} request object\n   * @api public\n   */\n\n\n  generateId(req) {\n    return base64id.generateId();\n  }\n  /**\n   * Handshakes a new client.\n   *\n   * @param {String} transport name\n   * @param {Object} request object\n   * @param {Function} closeConnection\n   *\n   * @api protected\n   */\n\n\n  handshake(transportName, req, closeConnection) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const protocol = req._query.EIO === \"4\" ? 4 : 3; // 3rd revision by default\n\n      if (protocol === 3 && !_this.opts.allowEIO3) {\n        debug(\"unsupported protocol version\");\n\n        _this.emit(\"connection_error\", {\n          req,\n          code: Server.errors.UNSUPPORTED_PROTOCOL_VERSION,\n          message: Server.errorMessages[Server.errors.UNSUPPORTED_PROTOCOL_VERSION],\n          context: {\n            protocol\n          }\n        });\n\n        closeConnection(Server.errors.UNSUPPORTED_PROTOCOL_VERSION);\n        return;\n      }\n\n      let id;\n\n      try {\n        id = yield _this.generateId(req);\n      } catch (e) {\n        debug(\"error while generating an id\");\n\n        _this.emit(\"connection_error\", {\n          req,\n          code: Server.errors.BAD_REQUEST,\n          message: Server.errorMessages[Server.errors.BAD_REQUEST],\n          context: {\n            name: \"ID_GENERATION_ERROR\",\n            error: e\n          }\n        });\n\n        closeConnection(Server.errors.BAD_REQUEST);\n        return;\n      }\n\n      debug('handshaking client \"%s\"', id);\n\n      try {\n        var transport = _this.createTransport(transportName, req);\n\n        if (\"polling\" === transportName) {\n          transport.maxHttpBufferSize = _this.opts.maxHttpBufferSize;\n          transport.httpCompression = _this.opts.httpCompression;\n        } else if (\"websocket\" === transportName) {\n          transport.perMessageDeflate = _this.opts.perMessageDeflate;\n        }\n\n        if (req._query && req._query.b64) {\n          transport.supportsBinary = false;\n        } else {\n          transport.supportsBinary = true;\n        }\n      } catch (e) {\n        debug('error handshaking to transport \"%s\"', transportName);\n\n        _this.emit(\"connection_error\", {\n          req,\n          code: Server.errors.BAD_REQUEST,\n          message: Server.errorMessages[Server.errors.BAD_REQUEST],\n          context: {\n            name: \"TRANSPORT_HANDSHAKE_ERROR\",\n            error: e\n          }\n        });\n\n        closeConnection(Server.errors.BAD_REQUEST);\n        return;\n      }\n\n      const socket = new socket_1.Socket(id, _this, transport, req, protocol);\n      transport.on(\"headers\", (headers, req) => {\n        const isInitialRequest = !req._query.sid;\n\n        if (isInitialRequest) {\n          if (_this.opts.cookie) {\n            headers[\"Set-Cookie\"] = [// @ts-ignore\n            (0, cookie_1.serialize)(_this.opts.cookie.name, id, _this.opts.cookie)];\n          }\n\n          _this.emit(\"initial_headers\", headers, req);\n        }\n\n        _this.emit(\"headers\", headers, req);\n      });\n      transport.onRequest(req);\n      _this.clients[id] = socket;\n      _this.clientsCount++;\n      socket.once(\"close\", () => {\n        delete _this.clients[id];\n        _this.clientsCount--;\n      });\n\n      _this.emit(\"connection\", socket);\n\n      return transport;\n    })();\n  }\n\n}\n\nexports.BaseServer = BaseServer;\n/**\n * Protocol errors mappings.\n */\n\nBaseServer.errors = {\n  UNKNOWN_TRANSPORT: 0,\n  UNKNOWN_SID: 1,\n  BAD_HANDSHAKE_METHOD: 2,\n  BAD_REQUEST: 3,\n  FORBIDDEN: 4,\n  UNSUPPORTED_PROTOCOL_VERSION: 5\n};\nBaseServer.errorMessages = {\n  0: \"Transport unknown\",\n  1: \"Session ID unknown\",\n  2: \"Bad handshake method\",\n  3: \"Bad request\",\n  4: \"Forbidden\",\n  5: \"Unsupported protocol version\"\n};\n\nclass Server extends BaseServer {\n  /**\n   * Initialize websocket server\n   *\n   * @api protected\n   */\n  init() {\n    if (!~this.opts.transports.indexOf(\"websocket\")) return;\n    if (this.ws) this.ws.close();\n    this.ws = new this.opts.wsEngine({\n      noServer: true,\n      clientTracking: false,\n      perMessageDeflate: this.opts.perMessageDeflate,\n      maxPayload: this.opts.maxHttpBufferSize\n    });\n\n    if (typeof this.ws.on === \"function\") {\n      this.ws.on(\"headers\", (headersArray, req) => {\n        // note: 'ws' uses an array of headers, while Engine.IO uses an object (response.writeHead() accepts both formats)\n        // we could also try to parse the array and then sync the values, but that will be error-prone\n        const additionalHeaders = {};\n        const isInitialRequest = !req._query.sid;\n\n        if (isInitialRequest) {\n          this.emit(\"initial_headers\", additionalHeaders, req);\n        }\n\n        this.emit(\"headers\", additionalHeaders, req);\n        Object.keys(additionalHeaders).forEach(key => {\n          headersArray.push(`${key}: ${additionalHeaders[key]}`);\n        });\n      });\n    }\n  }\n\n  cleanup() {\n    if (this.ws) {\n      debug(\"closing webSocketServer\");\n      this.ws.close(); // don't delete this.ws because it can be used again if the http server starts listening again\n    }\n  }\n  /**\n   * Prepares a request by processing the query string.\n   *\n   * @api private\n   */\n\n\n  prepare(req) {\n    // try to leverage pre-existing `req._query` (e.g: from connect)\n    if (!req._query) {\n      req._query = ~req.url.indexOf(\"?\") ? qs.parse((0, url_1.parse)(req.url).query) : {};\n    }\n  }\n\n  createTransport(transportName, req) {\n    return new transports_1.default[transportName](req);\n  }\n  /**\n   * Handles an Engine.IO HTTP request.\n   *\n   * @param {http.IncomingMessage} request\n   * @param {http.ServerResponse|http.OutgoingMessage} response\n   * @api public\n   */\n\n\n  handleRequest(req, res) {\n    debug('handling \"%s\" http request \"%s\"', req.method, req.url);\n    this.prepare(req);\n    req.res = res;\n\n    const callback = (errorCode, errorContext) => {\n      if (errorCode !== undefined) {\n        this.emit(\"connection_error\", {\n          req,\n          code: errorCode,\n          message: Server.errorMessages[errorCode],\n          context: errorContext\n        });\n        abortRequest(res, errorCode, errorContext);\n        return;\n      }\n\n      if (req._query.sid) {\n        debug(\"setting new request for existing client\");\n\n        this.clients[req._query.sid].transport.onRequest(req);\n      } else {\n        const closeConnection = (errorCode, errorContext) => abortRequest(res, errorCode, errorContext);\n\n        this.handshake(req._query.transport, req, closeConnection);\n      }\n    };\n\n    if (this.corsMiddleware) {\n      this.corsMiddleware.call(null, req, res, () => {\n        this.verify(req, false, callback);\n      });\n    } else {\n      this.verify(req, false, callback);\n    }\n  }\n  /**\n   * Handles an Engine.IO HTTP Upgrade.\n   *\n   * @api public\n   */\n\n\n  handleUpgrade(req, socket, upgradeHead) {\n    this.prepare(req);\n    this.verify(req, true, (errorCode, errorContext) => {\n      if (errorCode) {\n        this.emit(\"connection_error\", {\n          req,\n          code: errorCode,\n          message: Server.errorMessages[errorCode],\n          context: errorContext\n        });\n        abortUpgrade(socket, errorCode, errorContext);\n        return;\n      }\n\n      const head = Buffer.from(upgradeHead);\n      upgradeHead = null; // delegate to ws\n\n      this.ws.handleUpgrade(req, socket, head, websocket => {\n        this.onWebSocket(req, socket, websocket);\n      });\n    });\n  }\n  /**\n   * Called upon a ws.io connection.\n   *\n   * @param {ws.Socket} websocket\n   * @api private\n   */\n\n\n  onWebSocket(req, socket, websocket) {\n    websocket.on(\"error\", onUpgradeError);\n\n    if (transports_1.default[req._query.transport] !== undefined && !transports_1.default[req._query.transport].prototype.handlesUpgrades) {\n      debug(\"transport doesnt handle upgraded requests\");\n      websocket.close();\n      return;\n    } // get client id\n\n\n    const id = req._query.sid; // keep a reference to the ws.Socket\n\n    req.websocket = websocket;\n\n    if (id) {\n      const client = this.clients[id];\n\n      if (!client) {\n        debug(\"upgrade attempt for closed client\");\n        websocket.close();\n      } else if (client.upgrading) {\n        debug(\"transport has already been trying to upgrade\");\n        websocket.close();\n      } else if (client.upgraded) {\n        debug(\"transport had already been upgraded\");\n        websocket.close();\n      } else {\n        debug(\"upgrading existing transport\"); // transport error handling takes over\n\n        websocket.removeListener(\"error\", onUpgradeError);\n        const transport = this.createTransport(req._query.transport, req);\n\n        if (req._query && req._query.b64) {\n          transport.supportsBinary = false;\n        } else {\n          transport.supportsBinary = true;\n        }\n\n        transport.perMessageDeflate = this.opts.perMessageDeflate;\n        client.maybeUpgrade(transport);\n      }\n    } else {\n      const closeConnection = (errorCode, errorContext) => abortUpgrade(socket, errorCode, errorContext);\n\n      this.handshake(req._query.transport, req, closeConnection);\n    }\n\n    function onUpgradeError() {\n      debug(\"websocket error before upgrade\"); // websocket.close() not needed\n    }\n  }\n  /**\n   * Captures upgrade requests for a http.Server.\n   *\n   * @param {http.Server} server\n   * @param {Object} options\n   * @api public\n   */\n\n\n  attach(server, options = {}) {\n    let path = (options.path || \"/engine.io\").replace(/\\/$/, \"\");\n    const destroyUpgradeTimeout = options.destroyUpgradeTimeout || 1000; // normalize path\n\n    path += \"/\";\n\n    function check(req) {\n      return path === req.url.slice(0, path.length);\n    } // cache and clean up listeners\n\n\n    const listeners = server.listeners(\"request\").slice(0);\n    server.removeAllListeners(\"request\");\n    server.on(\"close\", this.close.bind(this));\n    server.on(\"listening\", this.init.bind(this)); // add request handler\n\n    server.on(\"request\", (req, res) => {\n      if (check(req)) {\n        debug('intercepting request for path \"%s\"', path);\n        this.handleRequest(req, res);\n      } else {\n        let i = 0;\n        const l = listeners.length;\n\n        for (; i < l; i++) {\n          listeners[i].call(server, req, res);\n        }\n      }\n    });\n\n    if (~this.opts.transports.indexOf(\"websocket\")) {\n      server.on(\"upgrade\", (req, socket, head) => {\n        if (check(req)) {\n          this.handleUpgrade(req, socket, head);\n        } else if (false !== options.destroyUpgrade) {\n          // default node behavior is to disconnect when no handlers\n          // but by adding a handler, we prevent that\n          // and if no eio thing handles the upgrade\n          // then the socket needs to die!\n          setTimeout(function () {\n            // @ts-ignore\n            if (socket.writable && socket.bytesWritten <= 0) {\n              socket.on(\"error\", e => {\n                debug(\"error while destroying upgrade: %s\", e.message);\n              });\n              return socket.end();\n            }\n          }, destroyUpgradeTimeout);\n        }\n      });\n    }\n  }\n\n}\n\nexports.Server = Server;\n/**\n * Close the HTTP long-polling request\n *\n * @param res - the response object\n * @param errorCode - the error code\n * @param errorContext - additional error context\n *\n * @api private\n */\n\nfunction abortRequest(res, errorCode, errorContext) {\n  const statusCode = errorCode === Server.errors.FORBIDDEN ? 403 : 400;\n  const message = errorContext && errorContext.message ? errorContext.message : Server.errorMessages[errorCode];\n  res.writeHead(statusCode, {\n    \"Content-Type\": \"application/json\"\n  });\n  res.end(JSON.stringify({\n    code: errorCode,\n    message\n  }));\n}\n/**\n * Close the WebSocket connection\n *\n * @param {net.Socket} socket\n * @param {string} errorCode - the error code\n * @param {object} errorContext - additional error context\n *\n * @api private\n */\n\n\nfunction abortUpgrade(socket, errorCode, errorContext = {}) {\n  socket.on(\"error\", () => {\n    debug(\"ignoring error from closed connection\");\n  });\n\n  if (socket.writable) {\n    const message = errorContext.message || Server.errorMessages[errorCode];\n    const length = Buffer.byteLength(message);\n    socket.write(\"HTTP/1.1 400 Bad Request\\r\\n\" + \"Connection: close\\r\\n\" + \"Content-type: text/html\\r\\n\" + \"Content-Length: \" + length + \"\\r\\n\" + \"\\r\\n\" + message);\n  }\n\n  socket.destroy();\n}\n/* eslint-disable */\n\n/**\n * From https://github.com/nodejs/node/blob/v8.4.0/lib/_http_common.js#L303-L354\n *\n * True if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n *\n * checkInvalidHeaderChar() is currently designed to be inlinable by v8,\n * so take care when making changes to the implementation so that the source\n * code size does not exceed v8's default max_inlined_source_size setting.\n **/\n// prettier-ignore\n\n\nconst validHdrChars = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 // ... 255\n];\n\nfunction checkInvalidHeaderChar(val) {\n  val += \"\";\n  if (val.length < 1) return false;\n\n  if (!validHdrChars[val.charCodeAt(0)]) {\n    debug('invalid header, index 0, char \"%s\"', val.charCodeAt(0));\n    return true;\n  }\n\n  if (val.length < 2) return false;\n\n  if (!validHdrChars[val.charCodeAt(1)]) {\n    debug('invalid header, index 1, char \"%s\"', val.charCodeAt(1));\n    return true;\n  }\n\n  if (val.length < 3) return false;\n\n  if (!validHdrChars[val.charCodeAt(2)]) {\n    debug('invalid header, index 2, char \"%s\"', val.charCodeAt(2));\n    return true;\n  }\n\n  if (val.length < 4) return false;\n\n  if (!validHdrChars[val.charCodeAt(3)]) {\n    debug('invalid header, index 3, char \"%s\"', val.charCodeAt(3));\n    return true;\n  }\n\n  for (let i = 4; i < val.length; ++i) {\n    if (!validHdrChars[val.charCodeAt(i)]) {\n      debug('invalid header, index \"%i\", char \"%s\"', i, val.charCodeAt(i));\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Server","BaseServer","qs","require","url_1","base64id","transports_1","events_1","socket_1","debug_1","cookie_1","ws_1","debug","default","EventEmitter","constructor","opts","clients","clientsCount","assign","wsEngine","pingTimeout","pingInterval","upgradeTimeout","maxHttpBufferSize","transports","keys","allowUpgrades","httpCompression","threshold","cors","allowEIO3","cookie","name","path","httpOnly","sameSite","corsMiddleware","perMessageDeflate","init","upgrades","transport","upgradesTo","verify","req","upgrade","fn","_query","indexOf","errors","UNKNOWN_TRANSPORT","isOriginInvalid","checkInvalidHeaderChar","headers","origin","BAD_REQUEST","sid","hasOwnProperty","UNKNOWN_SID","previousTransport","method","BAD_HANDSHAKE_METHOD","allowRequest","message","success","FORBIDDEN","close","i","cleanup","generateId","handshake","transportName","closeConnection","protocol","EIO","emit","code","UNSUPPORTED_PROTOCOL_VERSION","errorMessages","context","id","e","error","createTransport","b64","supportsBinary","socket","Socket","on","isInitialRequest","serialize","onRequest","once","ws","noServer","clientTracking","maxPayload","headersArray","additionalHeaders","forEach","key","push","prepare","url","parse","query","handleRequest","res","callback","errorCode","errorContext","undefined","abortRequest","call","handleUpgrade","upgradeHead","abortUpgrade","head","Buffer","from","websocket","onWebSocket","onUpgradeError","prototype","handlesUpgrades","client","upgrading","upgraded","removeListener","maybeUpgrade","attach","server","options","replace","destroyUpgradeTimeout","check","slice","length","listeners","removeAllListeners","bind","l","destroyUpgrade","setTimeout","writable","bytesWritten","end","statusCode","writeHead","JSON","stringify","byteLength","write","destroy","validHdrChars","val","charCodeAt"],"sources":["C:/Users/SystemForLinux/Desktop/f2/code/chat/chatangular/node_modules/engine.io/build/server.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = exports.BaseServer = void 0;\nconst qs = require(\"querystring\");\nconst url_1 = require(\"url\");\nconst base64id = require(\"base64id\");\nconst transports_1 = require(\"./transports\");\nconst events_1 = require(\"events\");\nconst socket_1 = require(\"./socket\");\nconst debug_1 = require(\"debug\");\nconst cookie_1 = require(\"cookie\");\nconst ws_1 = require(\"ws\");\nconst debug = (0, debug_1.default)(\"engine\");\nclass BaseServer extends events_1.EventEmitter {\n    /**\n     * Server constructor.\n     *\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(opts = {}) {\n        super();\n        this.clients = {};\n        this.clientsCount = 0;\n        this.opts = Object.assign({\n            wsEngine: ws_1.Server,\n            pingTimeout: 20000,\n            pingInterval: 25000,\n            upgradeTimeout: 10000,\n            maxHttpBufferSize: 1e6,\n            transports: Object.keys(transports_1.default),\n            allowUpgrades: true,\n            httpCompression: {\n                threshold: 1024\n            },\n            cors: false,\n            allowEIO3: false\n        }, opts);\n        if (opts.cookie) {\n            this.opts.cookie = Object.assign({\n                name: \"io\",\n                path: \"/\",\n                // @ts-ignore\n                httpOnly: opts.cookie.path !== false,\n                sameSite: \"lax\"\n            }, opts.cookie);\n        }\n        if (this.opts.cors) {\n            this.corsMiddleware = require(\"cors\")(this.opts.cors);\n        }\n        if (opts.perMessageDeflate) {\n            this.opts.perMessageDeflate = Object.assign({\n                threshold: 1024\n            }, opts.perMessageDeflate);\n        }\n        this.init();\n    }\n    /**\n     * Returns a list of available transports for upgrade given a certain transport.\n     *\n     * @return {Array}\n     * @api public\n     */\n    upgrades(transport) {\n        if (!this.opts.allowUpgrades)\n            return [];\n        return transports_1.default[transport].upgradesTo || [];\n    }\n    /**\n     * Verifies a request.\n     *\n     * @param {http.IncomingMessage}\n     * @return {Boolean} whether the request is valid\n     * @api private\n     */\n    verify(req, upgrade, fn) {\n        // transport check\n        const transport = req._query.transport;\n        if (!~this.opts.transports.indexOf(transport)) {\n            debug('unknown transport \"%s\"', transport);\n            return fn(Server.errors.UNKNOWN_TRANSPORT, { transport });\n        }\n        // 'Origin' header check\n        const isOriginInvalid = checkInvalidHeaderChar(req.headers.origin);\n        if (isOriginInvalid) {\n            const origin = req.headers.origin;\n            req.headers.origin = null;\n            debug(\"origin header invalid\");\n            return fn(Server.errors.BAD_REQUEST, {\n                name: \"INVALID_ORIGIN\",\n                origin\n            });\n        }\n        // sid check\n        const sid = req._query.sid;\n        if (sid) {\n            if (!this.clients.hasOwnProperty(sid)) {\n                debug('unknown sid \"%s\"', sid);\n                return fn(Server.errors.UNKNOWN_SID, {\n                    sid\n                });\n            }\n            const previousTransport = this.clients[sid].transport.name;\n            if (!upgrade && previousTransport !== transport) {\n                debug(\"bad request: unexpected transport without upgrade\");\n                return fn(Server.errors.BAD_REQUEST, {\n                    name: \"TRANSPORT_MISMATCH\",\n                    transport,\n                    previousTransport\n                });\n            }\n        }\n        else {\n            // handshake is GET only\n            if (\"GET\" !== req.method) {\n                return fn(Server.errors.BAD_HANDSHAKE_METHOD, {\n                    method: req.method\n                });\n            }\n            if (transport === \"websocket\" && !upgrade) {\n                debug(\"invalid transport upgrade\");\n                return fn(Server.errors.BAD_REQUEST, {\n                    name: \"TRANSPORT_HANDSHAKE_ERROR\"\n                });\n            }\n            if (!this.opts.allowRequest)\n                return fn();\n            return this.opts.allowRequest(req, (message, success) => {\n                if (!success) {\n                    return fn(Server.errors.FORBIDDEN, {\n                        message\n                    });\n                }\n                fn();\n            });\n        }\n        fn();\n    }\n    /**\n     * Closes all clients.\n     *\n     * @api public\n     */\n    close() {\n        debug(\"closing all open clients\");\n        for (let i in this.clients) {\n            if (this.clients.hasOwnProperty(i)) {\n                this.clients[i].close(true);\n            }\n        }\n        this.cleanup();\n        return this;\n    }\n    /**\n     * generate a socket id.\n     * Overwrite this method to generate your custom socket id\n     *\n     * @param {Object} request object\n     * @api public\n     */\n    generateId(req) {\n        return base64id.generateId();\n    }\n    /**\n     * Handshakes a new client.\n     *\n     * @param {String} transport name\n     * @param {Object} request object\n     * @param {Function} closeConnection\n     *\n     * @api protected\n     */\n    async handshake(transportName, req, closeConnection) {\n        const protocol = req._query.EIO === \"4\" ? 4 : 3; // 3rd revision by default\n        if (protocol === 3 && !this.opts.allowEIO3) {\n            debug(\"unsupported protocol version\");\n            this.emit(\"connection_error\", {\n                req,\n                code: Server.errors.UNSUPPORTED_PROTOCOL_VERSION,\n                message: Server.errorMessages[Server.errors.UNSUPPORTED_PROTOCOL_VERSION],\n                context: {\n                    protocol\n                }\n            });\n            closeConnection(Server.errors.UNSUPPORTED_PROTOCOL_VERSION);\n            return;\n        }\n        let id;\n        try {\n            id = await this.generateId(req);\n        }\n        catch (e) {\n            debug(\"error while generating an id\");\n            this.emit(\"connection_error\", {\n                req,\n                code: Server.errors.BAD_REQUEST,\n                message: Server.errorMessages[Server.errors.BAD_REQUEST],\n                context: {\n                    name: \"ID_GENERATION_ERROR\",\n                    error: e\n                }\n            });\n            closeConnection(Server.errors.BAD_REQUEST);\n            return;\n        }\n        debug('handshaking client \"%s\"', id);\n        try {\n            var transport = this.createTransport(transportName, req);\n            if (\"polling\" === transportName) {\n                transport.maxHttpBufferSize = this.opts.maxHttpBufferSize;\n                transport.httpCompression = this.opts.httpCompression;\n            }\n            else if (\"websocket\" === transportName) {\n                transport.perMessageDeflate = this.opts.perMessageDeflate;\n            }\n            if (req._query && req._query.b64) {\n                transport.supportsBinary = false;\n            }\n            else {\n                transport.supportsBinary = true;\n            }\n        }\n        catch (e) {\n            debug('error handshaking to transport \"%s\"', transportName);\n            this.emit(\"connection_error\", {\n                req,\n                code: Server.errors.BAD_REQUEST,\n                message: Server.errorMessages[Server.errors.BAD_REQUEST],\n                context: {\n                    name: \"TRANSPORT_HANDSHAKE_ERROR\",\n                    error: e\n                }\n            });\n            closeConnection(Server.errors.BAD_REQUEST);\n            return;\n        }\n        const socket = new socket_1.Socket(id, this, transport, req, protocol);\n        transport.on(\"headers\", (headers, req) => {\n            const isInitialRequest = !req._query.sid;\n            if (isInitialRequest) {\n                if (this.opts.cookie) {\n                    headers[\"Set-Cookie\"] = [\n                        // @ts-ignore\n                        (0, cookie_1.serialize)(this.opts.cookie.name, id, this.opts.cookie)\n                    ];\n                }\n                this.emit(\"initial_headers\", headers, req);\n            }\n            this.emit(\"headers\", headers, req);\n        });\n        transport.onRequest(req);\n        this.clients[id] = socket;\n        this.clientsCount++;\n        socket.once(\"close\", () => {\n            delete this.clients[id];\n            this.clientsCount--;\n        });\n        this.emit(\"connection\", socket);\n        return transport;\n    }\n}\nexports.BaseServer = BaseServer;\n/**\n * Protocol errors mappings.\n */\nBaseServer.errors = {\n    UNKNOWN_TRANSPORT: 0,\n    UNKNOWN_SID: 1,\n    BAD_HANDSHAKE_METHOD: 2,\n    BAD_REQUEST: 3,\n    FORBIDDEN: 4,\n    UNSUPPORTED_PROTOCOL_VERSION: 5\n};\nBaseServer.errorMessages = {\n    0: \"Transport unknown\",\n    1: \"Session ID unknown\",\n    2: \"Bad handshake method\",\n    3: \"Bad request\",\n    4: \"Forbidden\",\n    5: \"Unsupported protocol version\"\n};\nclass Server extends BaseServer {\n    /**\n     * Initialize websocket server\n     *\n     * @api protected\n     */\n    init() {\n        if (!~this.opts.transports.indexOf(\"websocket\"))\n            return;\n        if (this.ws)\n            this.ws.close();\n        this.ws = new this.opts.wsEngine({\n            noServer: true,\n            clientTracking: false,\n            perMessageDeflate: this.opts.perMessageDeflate,\n            maxPayload: this.opts.maxHttpBufferSize\n        });\n        if (typeof this.ws.on === \"function\") {\n            this.ws.on(\"headers\", (headersArray, req) => {\n                // note: 'ws' uses an array of headers, while Engine.IO uses an object (response.writeHead() accepts both formats)\n                // we could also try to parse the array and then sync the values, but that will be error-prone\n                const additionalHeaders = {};\n                const isInitialRequest = !req._query.sid;\n                if (isInitialRequest) {\n                    this.emit(\"initial_headers\", additionalHeaders, req);\n                }\n                this.emit(\"headers\", additionalHeaders, req);\n                Object.keys(additionalHeaders).forEach(key => {\n                    headersArray.push(`${key}: ${additionalHeaders[key]}`);\n                });\n            });\n        }\n    }\n    cleanup() {\n        if (this.ws) {\n            debug(\"closing webSocketServer\");\n            this.ws.close();\n            // don't delete this.ws because it can be used again if the http server starts listening again\n        }\n    }\n    /**\n     * Prepares a request by processing the query string.\n     *\n     * @api private\n     */\n    prepare(req) {\n        // try to leverage pre-existing `req._query` (e.g: from connect)\n        if (!req._query) {\n            req._query = ~req.url.indexOf(\"?\") ? qs.parse((0, url_1.parse)(req.url).query) : {};\n        }\n    }\n    createTransport(transportName, req) {\n        return new transports_1.default[transportName](req);\n    }\n    /**\n     * Handles an Engine.IO HTTP request.\n     *\n     * @param {http.IncomingMessage} request\n     * @param {http.ServerResponse|http.OutgoingMessage} response\n     * @api public\n     */\n    handleRequest(req, res) {\n        debug('handling \"%s\" http request \"%s\"', req.method, req.url);\n        this.prepare(req);\n        req.res = res;\n        const callback = (errorCode, errorContext) => {\n            if (errorCode !== undefined) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: Server.errorMessages[errorCode],\n                    context: errorContext\n                });\n                abortRequest(res, errorCode, errorContext);\n                return;\n            }\n            if (req._query.sid) {\n                debug(\"setting new request for existing client\");\n                this.clients[req._query.sid].transport.onRequest(req);\n            }\n            else {\n                const closeConnection = (errorCode, errorContext) => abortRequest(res, errorCode, errorContext);\n                this.handshake(req._query.transport, req, closeConnection);\n            }\n        };\n        if (this.corsMiddleware) {\n            this.corsMiddleware.call(null, req, res, () => {\n                this.verify(req, false, callback);\n            });\n        }\n        else {\n            this.verify(req, false, callback);\n        }\n    }\n    /**\n     * Handles an Engine.IO HTTP Upgrade.\n     *\n     * @api public\n     */\n    handleUpgrade(req, socket, upgradeHead) {\n        this.prepare(req);\n        this.verify(req, true, (errorCode, errorContext) => {\n            if (errorCode) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: Server.errorMessages[errorCode],\n                    context: errorContext\n                });\n                abortUpgrade(socket, errorCode, errorContext);\n                return;\n            }\n            const head = Buffer.from(upgradeHead);\n            upgradeHead = null;\n            // delegate to ws\n            this.ws.handleUpgrade(req, socket, head, websocket => {\n                this.onWebSocket(req, socket, websocket);\n            });\n        });\n    }\n    /**\n     * Called upon a ws.io connection.\n     *\n     * @param {ws.Socket} websocket\n     * @api private\n     */\n    onWebSocket(req, socket, websocket) {\n        websocket.on(\"error\", onUpgradeError);\n        if (transports_1.default[req._query.transport] !== undefined &&\n            !transports_1.default[req._query.transport].prototype.handlesUpgrades) {\n            debug(\"transport doesnt handle upgraded requests\");\n            websocket.close();\n            return;\n        }\n        // get client id\n        const id = req._query.sid;\n        // keep a reference to the ws.Socket\n        req.websocket = websocket;\n        if (id) {\n            const client = this.clients[id];\n            if (!client) {\n                debug(\"upgrade attempt for closed client\");\n                websocket.close();\n            }\n            else if (client.upgrading) {\n                debug(\"transport has already been trying to upgrade\");\n                websocket.close();\n            }\n            else if (client.upgraded) {\n                debug(\"transport had already been upgraded\");\n                websocket.close();\n            }\n            else {\n                debug(\"upgrading existing transport\");\n                // transport error handling takes over\n                websocket.removeListener(\"error\", onUpgradeError);\n                const transport = this.createTransport(req._query.transport, req);\n                if (req._query && req._query.b64) {\n                    transport.supportsBinary = false;\n                }\n                else {\n                    transport.supportsBinary = true;\n                }\n                transport.perMessageDeflate = this.opts.perMessageDeflate;\n                client.maybeUpgrade(transport);\n            }\n        }\n        else {\n            const closeConnection = (errorCode, errorContext) => abortUpgrade(socket, errorCode, errorContext);\n            this.handshake(req._query.transport, req, closeConnection);\n        }\n        function onUpgradeError() {\n            debug(\"websocket error before upgrade\");\n            // websocket.close() not needed\n        }\n    }\n    /**\n     * Captures upgrade requests for a http.Server.\n     *\n     * @param {http.Server} server\n     * @param {Object} options\n     * @api public\n     */\n    attach(server, options = {}) {\n        let path = (options.path || \"/engine.io\").replace(/\\/$/, \"\");\n        const destroyUpgradeTimeout = options.destroyUpgradeTimeout || 1000;\n        // normalize path\n        path += \"/\";\n        function check(req) {\n            return path === req.url.slice(0, path.length);\n        }\n        // cache and clean up listeners\n        const listeners = server.listeners(\"request\").slice(0);\n        server.removeAllListeners(\"request\");\n        server.on(\"close\", this.close.bind(this));\n        server.on(\"listening\", this.init.bind(this));\n        // add request handler\n        server.on(\"request\", (req, res) => {\n            if (check(req)) {\n                debug('intercepting request for path \"%s\"', path);\n                this.handleRequest(req, res);\n            }\n            else {\n                let i = 0;\n                const l = listeners.length;\n                for (; i < l; i++) {\n                    listeners[i].call(server, req, res);\n                }\n            }\n        });\n        if (~this.opts.transports.indexOf(\"websocket\")) {\n            server.on(\"upgrade\", (req, socket, head) => {\n                if (check(req)) {\n                    this.handleUpgrade(req, socket, head);\n                }\n                else if (false !== options.destroyUpgrade) {\n                    // default node behavior is to disconnect when no handlers\n                    // but by adding a handler, we prevent that\n                    // and if no eio thing handles the upgrade\n                    // then the socket needs to die!\n                    setTimeout(function () {\n                        // @ts-ignore\n                        if (socket.writable && socket.bytesWritten <= 0) {\n                            socket.on(\"error\", e => {\n                                debug(\"error while destroying upgrade: %s\", e.message);\n                            });\n                            return socket.end();\n                        }\n                    }, destroyUpgradeTimeout);\n                }\n            });\n        }\n    }\n}\nexports.Server = Server;\n/**\n * Close the HTTP long-polling request\n *\n * @param res - the response object\n * @param errorCode - the error code\n * @param errorContext - additional error context\n *\n * @api private\n */\nfunction abortRequest(res, errorCode, errorContext) {\n    const statusCode = errorCode === Server.errors.FORBIDDEN ? 403 : 400;\n    const message = errorContext && errorContext.message\n        ? errorContext.message\n        : Server.errorMessages[errorCode];\n    res.writeHead(statusCode, { \"Content-Type\": \"application/json\" });\n    res.end(JSON.stringify({\n        code: errorCode,\n        message\n    }));\n}\n/**\n * Close the WebSocket connection\n *\n * @param {net.Socket} socket\n * @param {string} errorCode - the error code\n * @param {object} errorContext - additional error context\n *\n * @api private\n */\nfunction abortUpgrade(socket, errorCode, errorContext = {}) {\n    socket.on(\"error\", () => {\n        debug(\"ignoring error from closed connection\");\n    });\n    if (socket.writable) {\n        const message = errorContext.message || Server.errorMessages[errorCode];\n        const length = Buffer.byteLength(message);\n        socket.write(\"HTTP/1.1 400 Bad Request\\r\\n\" +\n            \"Connection: close\\r\\n\" +\n            \"Content-type: text/html\\r\\n\" +\n            \"Content-Length: \" +\n            length +\n            \"\\r\\n\" +\n            \"\\r\\n\" +\n            message);\n    }\n    socket.destroy();\n}\n/* eslint-disable */\n/**\n * From https://github.com/nodejs/node/blob/v8.4.0/lib/_http_common.js#L303-L354\n *\n * True if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n *\n * checkInvalidHeaderChar() is currently designed to be inlinable by v8,\n * so take care when making changes to the implementation so that the source\n * code size does not exceed v8's default max_inlined_source_size setting.\n **/\n// prettier-ignore\nconst validHdrChars = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 // ... 255\n];\nfunction checkInvalidHeaderChar(val) {\n    val += \"\";\n    if (val.length < 1)\n        return false;\n    if (!validHdrChars[val.charCodeAt(0)]) {\n        debug('invalid header, index 0, char \"%s\"', val.charCodeAt(0));\n        return true;\n    }\n    if (val.length < 2)\n        return false;\n    if (!validHdrChars[val.charCodeAt(1)]) {\n        debug('invalid header, index 1, char \"%s\"', val.charCodeAt(1));\n        return true;\n    }\n    if (val.length < 3)\n        return false;\n    if (!validHdrChars[val.charCodeAt(2)]) {\n        debug('invalid header, index 2, char \"%s\"', val.charCodeAt(2));\n        return true;\n    }\n    if (val.length < 4)\n        return false;\n    if (!validHdrChars[val.charCodeAt(3)]) {\n        debug('invalid header, index 3, char \"%s\"', val.charCodeAt(3));\n        return true;\n    }\n    for (let i = 4; i < val.length; ++i) {\n        if (!validHdrChars[val.charCodeAt(i)]) {\n            debug('invalid header, index \"%i\", char \"%s\"', i, val.charCodeAt(i));\n            return true;\n        }\n    }\n    return false;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}