{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n  if (!scheduler) {\n    return new Observable(subscribeToObservable(input));\n  } else {\n    return new Observable(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => {\n        const observable = input[Symbol_observable]();\n        sub.add(observable.subscribe({\n          next(value) {\n            sub.add(scheduler.schedule(() => subscriber.next(value)));\n          },\n\n          error(err) {\n            sub.add(scheduler.schedule(() => subscriber.error(err)));\n          },\n\n          complete() {\n            sub.add(scheduler.schedule(() => subscriber.complete()));\n          }\n\n        }));\n      }));\n      return sub;\n    });\n  }\n}","map":{"version":3,"names":["Observable","Subscription","observable","Symbol_observable","subscribeToObservable","fromObservable","input","scheduler","subscriber","sub","add","schedule","subscribe","next","value","error","err","complete"],"sources":["C:/Users/SystemForLinux/Desktop/angular8-springboot-websocket-master/angular8-springboot-websocket-master/front-end/angular8-springboot-websocket/node_modules/rxjs/_esm2015/internal/observable/fromObservable.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            sub.add(scheduler.schedule(() => {\n                const observable = input[Symbol_observable]();\n                sub.add(observable.subscribe({\n                    next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n                    error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n                    complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAU,IAAIC,iBAAvB,QAAgD,sBAAhD;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,SAA/B,EAA0C;EAC7C,IAAI,CAACA,SAAL,EAAgB;IACZ,OAAO,IAAIP,UAAJ,CAAeI,qBAAqB,CAACE,KAAD,CAApC,CAAP;EACH,CAFD,MAGK;IACD,OAAO,IAAIN,UAAJ,CAAeQ,UAAU,IAAI;MAChC,MAAMC,GAAG,GAAG,IAAIR,YAAJ,EAAZ;MACAQ,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,MAAM;QAC7B,MAAMT,UAAU,GAAGI,KAAK,CAACH,iBAAD,CAAL,EAAnB;QACAM,GAAG,CAACC,GAAJ,CAAQR,UAAU,CAACU,SAAX,CAAqB;UACzBC,IAAI,CAACC,KAAD,EAAQ;YAAEL,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,MAAMH,UAAU,CAACK,IAAX,CAAgBC,KAAhB,CAAzB,CAAR;UAA4D,CADjD;;UAEzBC,KAAK,CAACC,GAAD,EAAM;YAAEP,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,MAAMH,UAAU,CAACO,KAAX,CAAiBC,GAAjB,CAAzB,CAAR;UAA2D,CAF/C;;UAGzBC,QAAQ,GAAG;YAAER,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,MAAMH,UAAU,CAACS,QAAX,EAAzB,CAAR;UAA2D;;QAH/C,CAArB,CAAR;MAKH,CAPO,CAAR;MAQA,OAAOR,GAAP;IACH,CAXM,CAAP;EAYH;AACJ"},"metadata":{},"sourceType":"module"}