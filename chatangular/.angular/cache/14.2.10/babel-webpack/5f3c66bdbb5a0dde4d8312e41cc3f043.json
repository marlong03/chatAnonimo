{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Namespace = exports.Socket = exports.Server = void 0;\n\nconst http = require(\"http\");\n\nconst fs_1 = require(\"fs\");\n\nconst zlib_1 = require(\"zlib\");\n\nconst accepts = require(\"accepts\");\n\nconst stream_1 = require(\"stream\");\n\nconst path = require(\"path\");\n\nconst engine_io_1 = require(\"engine.io\");\n\nconst client_1 = require(\"./client\");\n\nconst events_1 = require(\"events\");\n\nconst namespace_1 = require(\"./namespace\");\n\nObject.defineProperty(exports, \"Namespace\", {\n  enumerable: true,\n  get: function () {\n    return namespace_1.Namespace;\n  }\n});\n\nconst parent_namespace_1 = require(\"./parent-namespace\");\n\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\n\nconst parser = __importStar(require(\"socket.io-parser\"));\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst socket_1 = require(\"./socket\");\n\nObject.defineProperty(exports, \"Socket\", {\n  enumerable: true,\n  get: function () {\n    return socket_1.Socket;\n  }\n});\n\nconst typed_events_1 = require(\"./typed-events\");\n\nconst uws_1 = require(\"./uws\");\n\nconst debug = (0, debug_1.default)(\"socket.io:server\");\n\nconst clientVersion = require(\"../package.json\").version;\n\nconst dotMapRegex = /\\.map/;\n/**\n * Represents a Socket.IO server.\n *\n * @example\n * import { Server } from \"socket.io\";\n *\n * const io = new Server();\n *\n * io.on(\"connection\", (socket) => {\n *   console.log(`socket ${socket.id} connected`);\n *\n *   // send an event to the client\n *   socket.emit(\"foo\", \"bar\");\n *\n *   socket.on(\"foobar\", () => {\n *     // an event was received from the client\n *   });\n *\n *   // upon disconnection\n *   socket.on(\"disconnect\", (reason) => {\n *     console.log(`socket ${socket.id} disconnected due to ${reason}`);\n *   });\n * });\n *\n * io.listen(3000);\n */\n\nclass Server extends typed_events_1.StrictEventEmitter {\n  constructor(srv, opts = {}) {\n    super();\n    /**\n     * @private\n     */\n\n    this._nsps = new Map();\n    this.parentNsps = new Map();\n\n    if (\"object\" === typeof srv && srv instanceof Object && !srv.listen) {\n      opts = srv;\n      srv = undefined;\n    }\n\n    this.path(opts.path || \"/socket.io\");\n    this.connectTimeout(opts.connectTimeout || 45000);\n    this.serveClient(false !== opts.serveClient);\n    this._parser = opts.parser || parser;\n    this.encoder = new this._parser.Encoder();\n    this.adapter(opts.adapter || socket_io_adapter_1.Adapter);\n    this.sockets = this.of(\"/\");\n    this.opts = opts;\n    if (srv || typeof srv == \"number\") this.attach(srv);\n  }\n\n  serveClient(v) {\n    if (!arguments.length) return this._serveClient;\n    this._serveClient = v;\n    return this;\n  }\n  /**\n   * Executes the middleware for an incoming namespace not already created on the server.\n   *\n   * @param name - name of incoming namespace\n   * @param auth - the auth parameters\n   * @param fn - callback\n   *\n   * @private\n   */\n\n\n  _checkNamespace(name, auth, fn) {\n    if (this.parentNsps.size === 0) return fn(false);\n    const keysIterator = this.parentNsps.keys();\n\n    const run = () => {\n      const nextFn = keysIterator.next();\n\n      if (nextFn.done) {\n        return fn(false);\n      }\n\n      nextFn.value(name, auth, (err, allow) => {\n        if (err || !allow) {\n          return run();\n        }\n\n        if (this._nsps.has(name)) {\n          // the namespace was created in the meantime\n          debug(\"dynamic namespace %s already exists\", name);\n          return fn(this._nsps.get(name));\n        }\n\n        const namespace = this.parentNsps.get(nextFn.value).createChild(name);\n        debug(\"dynamic namespace %s was created\", name); // @ts-ignore\n\n        this.sockets.emitReserved(\"new_namespace\", namespace);\n        fn(namespace);\n      });\n    };\n\n    run();\n  }\n\n  path(v) {\n    if (!arguments.length) return this._path;\n    this._path = v.replace(/\\/$/, \"\");\n\n    const escapedPath = this._path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n\n    this.clientPathRegex = new RegExp(\"^\" + escapedPath + \"/socket\\\\.io(\\\\.msgpack|\\\\.esm)?(\\\\.min)?\\\\.js(\\\\.map)?(?:\\\\?|$)\");\n    return this;\n  }\n\n  connectTimeout(v) {\n    if (v === undefined) return this._connectTimeout;\n    this._connectTimeout = v;\n    return this;\n  }\n\n  adapter(v) {\n    if (!arguments.length) return this._adapter;\n    this._adapter = v;\n\n    for (const nsp of this._nsps.values()) {\n      nsp._initAdapter();\n    }\n\n    return this;\n  }\n  /**\n   * Attaches socket.io to a server or port.\n   *\n   * @param srv - server or port\n   * @param opts - options passed to engine.io\n   * @return self\n   */\n\n\n  listen(srv, opts = {}) {\n    return this.attach(srv, opts);\n  }\n  /**\n   * Attaches socket.io to a server or port.\n   *\n   * @param srv - server or port\n   * @param opts - options passed to engine.io\n   * @return self\n   */\n\n\n  attach(srv, opts = {}) {\n    if (\"function\" == typeof srv) {\n      const msg = \"You are trying to attach socket.io to an express \" + \"request handler function. Please pass a http.Server instance.\";\n      throw new Error(msg);\n    } // handle a port as a string\n\n\n    if (Number(srv) == srv) {\n      srv = Number(srv);\n    }\n\n    if (\"number\" == typeof srv) {\n      debug(\"creating http server and binding to %d\", srv);\n      const port = srv;\n      srv = http.createServer((req, res) => {\n        res.writeHead(404);\n        res.end();\n      });\n      srv.listen(port);\n    } // merge the options passed to the Socket.IO server\n\n\n    Object.assign(opts, this.opts); // set engine.io path to `/socket.io`\n\n    opts.path = opts.path || this._path;\n    this.initEngine(srv, opts);\n    return this;\n  }\n\n  attachApp(app\n  /*: TemplatedApp */\n  , opts = {}) {\n    // merge the options passed to the Socket.IO server\n    Object.assign(opts, this.opts); // set engine.io path to `/socket.io`\n\n    opts.path = opts.path || this._path; // initialize engine\n\n    debug(\"creating uWebSockets.js-based engine with opts %j\", opts);\n    const engine = new engine_io_1.uServer(opts);\n    engine.attach(app, opts); // bind to engine events\n\n    this.bind(engine);\n\n    if (this._serveClient) {\n      // attach static file serving\n      app.get(`${this._path}/*`, (res, req) => {\n        if (!this.clientPathRegex.test(req.getUrl())) {\n          req.setYield(true);\n          return;\n        }\n\n        const filename = req.getUrl().replace(this._path, \"\").replace(/\\?.*$/, \"\").replace(/^\\//, \"\");\n        const isMap = dotMapRegex.test(filename);\n        const type = isMap ? \"map\" : \"source\"; // Per the standard, ETags must be quoted:\n        // https://tools.ietf.org/html/rfc7232#section-2.3\n\n        const expectedEtag = '\"' + clientVersion + '\"';\n        const weakEtag = \"W/\" + expectedEtag;\n        const etag = req.getHeader(\"if-none-match\");\n\n        if (etag) {\n          if (expectedEtag === etag || weakEtag === etag) {\n            debug(\"serve client %s 304\", type);\n            res.writeStatus(\"304 Not Modified\");\n            res.end();\n            return;\n          }\n        }\n\n        debug(\"serve client %s\", type);\n        res.writeHeader(\"cache-control\", \"public, max-age=0\");\n        res.writeHeader(\"content-type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n        res.writeHeader(\"etag\", expectedEtag);\n        const filepath = path.join(__dirname, \"../client-dist/\", filename);\n        (0, uws_1.serveFile)(res, filepath);\n      });\n    }\n\n    (0, uws_1.patchAdapter)(app);\n  }\n  /**\n   * Initialize engine\n   *\n   * @param srv - the server to attach to\n   * @param opts - options passed to engine.io\n   * @private\n   */\n\n\n  initEngine(srv, opts) {\n    // initialize engine\n    debug(\"creating engine.io instance with opts %j\", opts);\n    this.eio = (0, engine_io_1.attach)(srv, opts); // attach static file serving\n\n    if (this._serveClient) this.attachServe(srv); // Export http server\n\n    this.httpServer = srv; // bind to engine events\n\n    this.bind(this.eio);\n  }\n  /**\n   * Attaches the static file serving.\n   *\n   * @param srv http server\n   * @private\n   */\n\n\n  attachServe(srv) {\n    debug(\"attaching client serving req handler\");\n    const evs = srv.listeners(\"request\").slice(0);\n    srv.removeAllListeners(\"request\");\n    srv.on(\"request\", (req, res) => {\n      if (this.clientPathRegex.test(req.url)) {\n        this.serve(req, res);\n      } else {\n        for (let i = 0; i < evs.length; i++) {\n          evs[i].call(srv, req, res);\n        }\n      }\n    });\n  }\n  /**\n   * Handles a request serving of client source and map\n   *\n   * @param req\n   * @param res\n   * @private\n   */\n\n\n  serve(req, res) {\n    const filename = req.url.replace(this._path, \"\").replace(/\\?.*$/, \"\");\n    const isMap = dotMapRegex.test(filename);\n    const type = isMap ? \"map\" : \"source\"; // Per the standard, ETags must be quoted:\n    // https://tools.ietf.org/html/rfc7232#section-2.3\n\n    const expectedEtag = '\"' + clientVersion + '\"';\n    const weakEtag = \"W/\" + expectedEtag;\n    const etag = req.headers[\"if-none-match\"];\n\n    if (etag) {\n      if (expectedEtag === etag || weakEtag === etag) {\n        debug(\"serve client %s 304\", type);\n        res.writeHead(304);\n        res.end();\n        return;\n      }\n    }\n\n    debug(\"serve client %s\", type);\n    res.setHeader(\"Cache-Control\", \"public, max-age=0\");\n    res.setHeader(\"Content-Type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n    res.setHeader(\"ETag\", expectedEtag);\n    Server.sendFile(filename, req, res);\n  }\n  /**\n   * @param filename\n   * @param req\n   * @param res\n   * @private\n   */\n\n\n  static sendFile(filename, req, res) {\n    const readStream = (0, fs_1.createReadStream)(path.join(__dirname, \"../client-dist/\", filename));\n    const encoding = accepts(req).encodings([\"br\", \"gzip\", \"deflate\"]);\n\n    const onError = err => {\n      if (err) {\n        res.end();\n      }\n    };\n\n    switch (encoding) {\n      case \"br\":\n        res.writeHead(200, {\n          \"content-encoding\": \"br\"\n        });\n        readStream.pipe((0, zlib_1.createBrotliCompress)()).pipe(res);\n        (0, stream_1.pipeline)(readStream, (0, zlib_1.createBrotliCompress)(), res, onError);\n        break;\n\n      case \"gzip\":\n        res.writeHead(200, {\n          \"content-encoding\": \"gzip\"\n        });\n        (0, stream_1.pipeline)(readStream, (0, zlib_1.createGzip)(), res, onError);\n        break;\n\n      case \"deflate\":\n        res.writeHead(200, {\n          \"content-encoding\": \"deflate\"\n        });\n        (0, stream_1.pipeline)(readStream, (0, zlib_1.createDeflate)(), res, onError);\n        break;\n\n      default:\n        res.writeHead(200);\n        (0, stream_1.pipeline)(readStream, res, onError);\n    }\n  }\n  /**\n   * Binds socket.io to an engine.io instance.\n   *\n   * @param {engine.Server} engine engine.io (or compatible) server\n   * @return self\n   */\n\n\n  bind(engine) {\n    this.engine = engine;\n    this.engine.on(\"connection\", this.onconnection.bind(this));\n    return this;\n  }\n  /**\n   * Called with each incoming transport connection.\n   *\n   * @param {engine.Socket} conn\n   * @return self\n   * @private\n   */\n\n\n  onconnection(conn) {\n    debug(\"incoming connection with id %s\", conn.id);\n    const client = new client_1.Client(this, conn);\n\n    if (conn.protocol === 3) {\n      // @ts-ignore\n      client.connect(\"/\");\n    }\n\n    return this;\n  }\n  /**\n   * Looks up a namespace.\n   *\n   * @example\n   * // with a simple string\n   * const myNamespace = io.of(\"/my-namespace\");\n   *\n   * // with a regex\n   * const dynamicNsp = io.of(/^\\/dynamic-\\d+$/).on(\"connection\", (socket) => {\n   *   const namespace = socket.nsp; // newNamespace.name === \"/dynamic-101\"\n   *\n   *   // broadcast to all clients in the given sub-namespace\n   *   namespace.emit(\"hello\");\n   * });\n   *\n   * @param name - nsp name\n   * @param fn optional, nsp `connection` ev handler\n   */\n\n\n  of(name, fn) {\n    if (typeof name === \"function\" || name instanceof RegExp) {\n      const parentNsp = new parent_namespace_1.ParentNamespace(this);\n      debug(\"initializing parent namespace %s\", parentNsp.name);\n\n      if (typeof name === \"function\") {\n        this.parentNsps.set(name, parentNsp);\n      } else {\n        this.parentNsps.set((nsp, conn, next) => next(null, name.test(nsp)), parentNsp);\n      }\n\n      if (fn) {\n        // @ts-ignore\n        parentNsp.on(\"connect\", fn);\n      }\n\n      return parentNsp;\n    }\n\n    if (String(name)[0] !== \"/\") name = \"/\" + name;\n\n    let nsp = this._nsps.get(name);\n\n    if (!nsp) {\n      debug(\"initializing namespace %s\", name);\n      nsp = new namespace_1.Namespace(this, name);\n\n      this._nsps.set(name, nsp);\n\n      if (name !== \"/\") {\n        // @ts-ignore\n        this.sockets.emitReserved(\"new_namespace\", nsp);\n      }\n    }\n\n    if (fn) nsp.on(\"connect\", fn);\n    return nsp;\n  }\n  /**\n   * Closes server connection\n   *\n   * @param [fn] optional, called as `fn([err])` on error OR all conns closed\n   */\n\n\n  close(fn) {\n    for (const socket of this.sockets.sockets.values()) {\n      socket._onclose(\"server shutting down\");\n    }\n\n    this.engine.close(); // restore the Adapter prototype\n\n    (0, uws_1.restoreAdapter)();\n\n    if (this.httpServer) {\n      this.httpServer.close(fn);\n    } else {\n      fn && fn();\n    }\n  }\n  /**\n   * Registers a middleware, which is a function that gets executed for every incoming {@link Socket}.\n   *\n   * @example\n   * io.use((socket, next) => {\n   *   // ...\n   *   next();\n   * });\n   *\n   * @param fn - the middleware function\n   */\n\n\n  use(fn) {\n    this.sockets.use(fn);\n    return this;\n  }\n  /**\n   * Targets a room when emitting.\n   *\n   * @example\n   * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n   * io.to(\"room-101\").emit(\"foo\", \"bar\");\n   *\n   * // with an array of rooms (a client will be notified at most once)\n   * io.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n   *\n   * // with multiple chained calls\n   * io.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n   *\n   * @param room - a room, or an array of rooms\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n\n\n  to(room) {\n    return this.sockets.to(room);\n  }\n  /**\n   * Targets a room when emitting. Similar to `to()`, but might feel clearer in some cases:\n   *\n   * @example\n   * // disconnect all clients in the \"room-101\" room\n   * io.in(\"room-101\").disconnectSockets();\n   *\n   * @param room - a room, or an array of rooms\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n\n\n  in(room) {\n    return this.sockets.in(room);\n  }\n  /**\n   * Excludes a room when emitting.\n   *\n   * @example\n   * // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n   * io.except(\"room-101\").emit(\"foo\", \"bar\");\n   *\n   * // with an array of rooms\n   * io.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n   *\n   * // with multiple chained calls\n   * io.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n   *\n   * @param room - a room, or an array of rooms\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n\n\n  except(room) {\n    return this.sockets.except(room);\n  }\n  /**\n   * Sends a `message` event to all clients.\n   *\n   * This method mimics the WebSocket.send() method.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n   *\n   * @example\n   * io.send(\"hello\");\n   *\n   * // this is equivalent to\n   * io.emit(\"message\", \"hello\");\n   *\n   * @return self\n   */\n\n\n  send(...args) {\n    this.sockets.emit(\"message\", ...args);\n    return this;\n  }\n  /**\n   * Sends a `message` event to all clients. Alias of {@link send}.\n   *\n   * @return self\n   */\n\n\n  write(...args) {\n    this.sockets.emit(\"message\", ...args);\n    return this;\n  }\n  /**\n   * Sends a message to the other Socket.IO servers of the cluster.\n   *\n   * @example\n   * io.serverSideEmit(\"hello\", \"world\");\n   *\n   * io.on(\"hello\", (arg1) => {\n   *   console.log(arg1); // prints \"world\"\n   * });\n   *\n   * // acknowledgements (without binary content) are supported too:\n   * io.serverSideEmit(\"ping\", (err, responses) => {\n   *  if (err) {\n   *     // some clients did not acknowledge the event in the given delay\n   *   } else {\n   *     console.log(responses); // one response per client\n   *   }\n   * });\n   *\n   * io.on(\"ping\", (cb) => {\n   *   cb(\"pong\");\n   * });\n   *\n   * @param ev - the event name\n   * @param args - an array of arguments, which may include an acknowledgement callback at the end\n   */\n\n\n  serverSideEmit(ev, ...args) {\n    return this.sockets.serverSideEmit(ev, ...args);\n  }\n  /**\n   * Gets a list of socket ids.\n   *\n   * @deprecated this method will be removed in the next major release, please use {@link Server#serverSideEmit} or\n   * {@link Server#fetchSockets} instead.\n   */\n\n\n  allSockets() {\n    return this.sockets.allSockets();\n  }\n  /**\n   * Sets the compress flag.\n   *\n   * @example\n   * io.compress(false).emit(\"hello\");\n   *\n   * @param compress - if `true`, compresses the sending data\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n\n\n  compress(compress) {\n    return this.sockets.compress(compress);\n  }\n  /**\n   * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n   * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n   * and is in the middle of a request-response cycle).\n   *\n   * @example\n   * io.volatile.emit(\"hello\"); // the clients may or may not receive it\n   *\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n\n\n  get volatile() {\n    return this.sockets.volatile;\n  }\n  /**\n   * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n   *\n   * @example\n   * // the “foo” event will be broadcast to all connected clients on this node\n   * io.local.emit(\"foo\", \"bar\");\n   *\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n\n\n  get local() {\n    return this.sockets.local;\n  }\n  /**\n   * Adds a timeout in milliseconds for the next operation.\n   *\n   * @example\n   * io.timeout(1000).emit(\"some-event\", (err, responses) => {\n   *   if (err) {\n   *     // some clients did not acknowledge the event in the given delay\n   *   } else {\n   *     console.log(responses); // one response per client\n   *   }\n   * });\n   *\n   * @param timeout\n   */\n\n\n  timeout(timeout) {\n    return this.sockets.timeout(timeout);\n  }\n  /**\n   * Returns the matching socket instances.\n   *\n   * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n   *\n   * @example\n   * // return all Socket instances\n   * const sockets = await io.fetchSockets();\n   *\n   * // return all Socket instances in the \"room1\" room\n   * const sockets = await io.in(\"room1\").fetchSockets();\n   *\n   * for (const socket of sockets) {\n   *   console.log(socket.id);\n   *   console.log(socket.handshake);\n   *   console.log(socket.rooms);\n   *   console.log(socket.data);\n   *\n   *   socket.emit(\"hello\");\n   *   socket.join(\"room1\");\n   *   socket.leave(\"room2\");\n   *   socket.disconnect();\n   * }\n   */\n\n\n  fetchSockets() {\n    return this.sockets.fetchSockets();\n  }\n  /**\n   * Makes the matching socket instances join the specified rooms.\n   *\n   * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n   *\n   * @example\n   *\n   * // make all socket instances join the \"room1\" room\n   * io.socketsJoin(\"room1\");\n   *\n   * // make all socket instances in the \"room1\" room join the \"room2\" and \"room3\" rooms\n   * io.in(\"room1\").socketsJoin([\"room2\", \"room3\"]);\n   *\n   * @param room - a room, or an array of rooms\n   */\n\n\n  socketsJoin(room) {\n    return this.sockets.socketsJoin(room);\n  }\n  /**\n   * Makes the matching socket instances leave the specified rooms.\n   *\n   * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n   *\n   * @example\n   * // make all socket instances leave the \"room1\" room\n   * io.socketsLeave(\"room1\");\n   *\n   * // make all socket instances in the \"room1\" room leave the \"room2\" and \"room3\" rooms\n   * io.in(\"room1\").socketsLeave([\"room2\", \"room3\"]);\n   *\n   * @param room - a room, or an array of rooms\n   */\n\n\n  socketsLeave(room) {\n    return this.sockets.socketsLeave(room);\n  }\n  /**\n   * Makes the matching socket instances disconnect.\n   *\n   * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n   *\n   * @example\n   * // make all socket instances disconnect (the connections might be kept alive for other namespaces)\n   * io.disconnectSockets();\n   *\n   * // make all socket instances in the \"room1\" room disconnect and close the underlying connections\n   * io.in(\"room1\").disconnectSockets(true);\n   *\n   * @param close - whether to close the underlying connection\n   */\n\n\n  disconnectSockets(close = false) {\n    return this.sockets.disconnectSockets(close);\n  }\n\n}\n\nexports.Server = Server;\n/**\n * Expose main namespace (/).\n */\n\nconst emitterMethods = Object.keys(events_1.EventEmitter.prototype).filter(function (key) {\n  return typeof events_1.EventEmitter.prototype[key] === \"function\";\n});\nemitterMethods.forEach(function (fn) {\n  Server.prototype[fn] = function () {\n    return this.sockets[fn].apply(this.sockets, arguments);\n  };\n});\n\nmodule.exports = (srv, opts) => new Server(srv, opts);\n\nmodule.exports.Server = Server;\nmodule.exports.Namespace = namespace_1.Namespace;\nmodule.exports.Socket = socket_1.Socket;\n\nvar socket_2 = require(\"./socket\");","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","Namespace","Socket","Server","http","require","fs_1","zlib_1","accepts","stream_1","path","engine_io_1","client_1","events_1","namespace_1","parent_namespace_1","socket_io_adapter_1","parser","debug_1","socket_1","typed_events_1","uws_1","debug","default","clientVersion","version","dotMapRegex","StrictEventEmitter","constructor","srv","opts","_nsps","Map","parentNsps","listen","connectTimeout","serveClient","_parser","encoder","Encoder","adapter","Adapter","sockets","of","attach","arguments","length","_serveClient","_checkNamespace","name","auth","fn","size","keysIterator","keys","run","nextFn","next","done","err","allow","has","namespace","createChild","emitReserved","_path","replace","escapedPath","clientPathRegex","RegExp","_connectTimeout","_adapter","nsp","values","_initAdapter","msg","Error","Number","port","createServer","req","res","writeHead","end","assign","initEngine","attachApp","app","engine","uServer","bind","test","getUrl","setYield","filename","isMap","type","expectedEtag","weakEtag","etag","getHeader","writeStatus","writeHeader","filepath","join","__dirname","serveFile","patchAdapter","eio","attachServe","httpServer","evs","listeners","slice","removeAllListeners","on","url","serve","i","headers","setHeader","sendFile","readStream","createReadStream","encoding","encodings","onError","pipe","createBrotliCompress","pipeline","createGzip","createDeflate","onconnection","conn","id","client","Client","protocol","connect","parentNsp","ParentNamespace","set","String","close","socket","_onclose","restoreAdapter","use","to","room","in","except","send","args","emit","write","serverSideEmit","ev","allSockets","compress","volatile","local","timeout","fetchSockets","socketsJoin","socketsLeave","disconnectSockets","emitterMethods","EventEmitter","filter","key","forEach","apply","module","socket_2"],"sources":["C:/Users/SystemForLinux/Desktop/f2/code/chat/chatangular/node_modules/socket.io/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Namespace = exports.Socket = exports.Server = void 0;\nconst http = require(\"http\");\nconst fs_1 = require(\"fs\");\nconst zlib_1 = require(\"zlib\");\nconst accepts = require(\"accepts\");\nconst stream_1 = require(\"stream\");\nconst path = require(\"path\");\nconst engine_io_1 = require(\"engine.io\");\nconst client_1 = require(\"./client\");\nconst events_1 = require(\"events\");\nconst namespace_1 = require(\"./namespace\");\nObject.defineProperty(exports, \"Namespace\", { enumerable: true, get: function () { return namespace_1.Namespace; } });\nconst parent_namespace_1 = require(\"./parent-namespace\");\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nconst typed_events_1 = require(\"./typed-events\");\nconst uws_1 = require(\"./uws\");\nconst debug = (0, debug_1.default)(\"socket.io:server\");\nconst clientVersion = require(\"../package.json\").version;\nconst dotMapRegex = /\\.map/;\n/**\n * Represents a Socket.IO server.\n *\n * @example\n * import { Server } from \"socket.io\";\n *\n * const io = new Server();\n *\n * io.on(\"connection\", (socket) => {\n *   console.log(`socket ${socket.id} connected`);\n *\n *   // send an event to the client\n *   socket.emit(\"foo\", \"bar\");\n *\n *   socket.on(\"foobar\", () => {\n *     // an event was received from the client\n *   });\n *\n *   // upon disconnection\n *   socket.on(\"disconnect\", (reason) => {\n *     console.log(`socket ${socket.id} disconnected due to ${reason}`);\n *   });\n * });\n *\n * io.listen(3000);\n */\nclass Server extends typed_events_1.StrictEventEmitter {\n    constructor(srv, opts = {}) {\n        super();\n        /**\n         * @private\n         */\n        this._nsps = new Map();\n        this.parentNsps = new Map();\n        if (\"object\" === typeof srv &&\n            srv instanceof Object &&\n            !srv.listen) {\n            opts = srv;\n            srv = undefined;\n        }\n        this.path(opts.path || \"/socket.io\");\n        this.connectTimeout(opts.connectTimeout || 45000);\n        this.serveClient(false !== opts.serveClient);\n        this._parser = opts.parser || parser;\n        this.encoder = new this._parser.Encoder();\n        this.adapter(opts.adapter || socket_io_adapter_1.Adapter);\n        this.sockets = this.of(\"/\");\n        this.opts = opts;\n        if (srv || typeof srv == \"number\")\n            this.attach(srv);\n    }\n    serveClient(v) {\n        if (!arguments.length)\n            return this._serveClient;\n        this._serveClient = v;\n        return this;\n    }\n    /**\n     * Executes the middleware for an incoming namespace not already created on the server.\n     *\n     * @param name - name of incoming namespace\n     * @param auth - the auth parameters\n     * @param fn - callback\n     *\n     * @private\n     */\n    _checkNamespace(name, auth, fn) {\n        if (this.parentNsps.size === 0)\n            return fn(false);\n        const keysIterator = this.parentNsps.keys();\n        const run = () => {\n            const nextFn = keysIterator.next();\n            if (nextFn.done) {\n                return fn(false);\n            }\n            nextFn.value(name, auth, (err, allow) => {\n                if (err || !allow) {\n                    return run();\n                }\n                if (this._nsps.has(name)) {\n                    // the namespace was created in the meantime\n                    debug(\"dynamic namespace %s already exists\", name);\n                    return fn(this._nsps.get(name));\n                }\n                const namespace = this.parentNsps.get(nextFn.value).createChild(name);\n                debug(\"dynamic namespace %s was created\", name);\n                // @ts-ignore\n                this.sockets.emitReserved(\"new_namespace\", namespace);\n                fn(namespace);\n            });\n        };\n        run();\n    }\n    path(v) {\n        if (!arguments.length)\n            return this._path;\n        this._path = v.replace(/\\/$/, \"\");\n        const escapedPath = this._path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n        this.clientPathRegex = new RegExp(\"^\" +\n            escapedPath +\n            \"/socket\\\\.io(\\\\.msgpack|\\\\.esm)?(\\\\.min)?\\\\.js(\\\\.map)?(?:\\\\?|$)\");\n        return this;\n    }\n    connectTimeout(v) {\n        if (v === undefined)\n            return this._connectTimeout;\n        this._connectTimeout = v;\n        return this;\n    }\n    adapter(v) {\n        if (!arguments.length)\n            return this._adapter;\n        this._adapter = v;\n        for (const nsp of this._nsps.values()) {\n            nsp._initAdapter();\n        }\n        return this;\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n    listen(srv, opts = {}) {\n        return this.attach(srv, opts);\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n    attach(srv, opts = {}) {\n        if (\"function\" == typeof srv) {\n            const msg = \"You are trying to attach socket.io to an express \" +\n                \"request handler function. Please pass a http.Server instance.\";\n            throw new Error(msg);\n        }\n        // handle a port as a string\n        if (Number(srv) == srv) {\n            srv = Number(srv);\n        }\n        if (\"number\" == typeof srv) {\n            debug(\"creating http server and binding to %d\", srv);\n            const port = srv;\n            srv = http.createServer((req, res) => {\n                res.writeHead(404);\n                res.end();\n            });\n            srv.listen(port);\n        }\n        // merge the options passed to the Socket.IO server\n        Object.assign(opts, this.opts);\n        // set engine.io path to `/socket.io`\n        opts.path = opts.path || this._path;\n        this.initEngine(srv, opts);\n        return this;\n    }\n    attachApp(app /*: TemplatedApp */, opts = {}) {\n        // merge the options passed to the Socket.IO server\n        Object.assign(opts, this.opts);\n        // set engine.io path to `/socket.io`\n        opts.path = opts.path || this._path;\n        // initialize engine\n        debug(\"creating uWebSockets.js-based engine with opts %j\", opts);\n        const engine = new engine_io_1.uServer(opts);\n        engine.attach(app, opts);\n        // bind to engine events\n        this.bind(engine);\n        if (this._serveClient) {\n            // attach static file serving\n            app.get(`${this._path}/*`, (res, req) => {\n                if (!this.clientPathRegex.test(req.getUrl())) {\n                    req.setYield(true);\n                    return;\n                }\n                const filename = req\n                    .getUrl()\n                    .replace(this._path, \"\")\n                    .replace(/\\?.*$/, \"\")\n                    .replace(/^\\//, \"\");\n                const isMap = dotMapRegex.test(filename);\n                const type = isMap ? \"map\" : \"source\";\n                // Per the standard, ETags must be quoted:\n                // https://tools.ietf.org/html/rfc7232#section-2.3\n                const expectedEtag = '\"' + clientVersion + '\"';\n                const weakEtag = \"W/\" + expectedEtag;\n                const etag = req.getHeader(\"if-none-match\");\n                if (etag) {\n                    if (expectedEtag === etag || weakEtag === etag) {\n                        debug(\"serve client %s 304\", type);\n                        res.writeStatus(\"304 Not Modified\");\n                        res.end();\n                        return;\n                    }\n                }\n                debug(\"serve client %s\", type);\n                res.writeHeader(\"cache-control\", \"public, max-age=0\");\n                res.writeHeader(\"content-type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n                res.writeHeader(\"etag\", expectedEtag);\n                const filepath = path.join(__dirname, \"../client-dist/\", filename);\n                (0, uws_1.serveFile)(res, filepath);\n            });\n        }\n        (0, uws_1.patchAdapter)(app);\n    }\n    /**\n     * Initialize engine\n     *\n     * @param srv - the server to attach to\n     * @param opts - options passed to engine.io\n     * @private\n     */\n    initEngine(srv, opts) {\n        // initialize engine\n        debug(\"creating engine.io instance with opts %j\", opts);\n        this.eio = (0, engine_io_1.attach)(srv, opts);\n        // attach static file serving\n        if (this._serveClient)\n            this.attachServe(srv);\n        // Export http server\n        this.httpServer = srv;\n        // bind to engine events\n        this.bind(this.eio);\n    }\n    /**\n     * Attaches the static file serving.\n     *\n     * @param srv http server\n     * @private\n     */\n    attachServe(srv) {\n        debug(\"attaching client serving req handler\");\n        const evs = srv.listeners(\"request\").slice(0);\n        srv.removeAllListeners(\"request\");\n        srv.on(\"request\", (req, res) => {\n            if (this.clientPathRegex.test(req.url)) {\n                this.serve(req, res);\n            }\n            else {\n                for (let i = 0; i < evs.length; i++) {\n                    evs[i].call(srv, req, res);\n                }\n            }\n        });\n    }\n    /**\n     * Handles a request serving of client source and map\n     *\n     * @param req\n     * @param res\n     * @private\n     */\n    serve(req, res) {\n        const filename = req.url.replace(this._path, \"\").replace(/\\?.*$/, \"\");\n        const isMap = dotMapRegex.test(filename);\n        const type = isMap ? \"map\" : \"source\";\n        // Per the standard, ETags must be quoted:\n        // https://tools.ietf.org/html/rfc7232#section-2.3\n        const expectedEtag = '\"' + clientVersion + '\"';\n        const weakEtag = \"W/\" + expectedEtag;\n        const etag = req.headers[\"if-none-match\"];\n        if (etag) {\n            if (expectedEtag === etag || weakEtag === etag) {\n                debug(\"serve client %s 304\", type);\n                res.writeHead(304);\n                res.end();\n                return;\n            }\n        }\n        debug(\"serve client %s\", type);\n        res.setHeader(\"Cache-Control\", \"public, max-age=0\");\n        res.setHeader(\"Content-Type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n        res.setHeader(\"ETag\", expectedEtag);\n        Server.sendFile(filename, req, res);\n    }\n    /**\n     * @param filename\n     * @param req\n     * @param res\n     * @private\n     */\n    static sendFile(filename, req, res) {\n        const readStream = (0, fs_1.createReadStream)(path.join(__dirname, \"../client-dist/\", filename));\n        const encoding = accepts(req).encodings([\"br\", \"gzip\", \"deflate\"]);\n        const onError = (err) => {\n            if (err) {\n                res.end();\n            }\n        };\n        switch (encoding) {\n            case \"br\":\n                res.writeHead(200, { \"content-encoding\": \"br\" });\n                readStream.pipe((0, zlib_1.createBrotliCompress)()).pipe(res);\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createBrotliCompress)(), res, onError);\n                break;\n            case \"gzip\":\n                res.writeHead(200, { \"content-encoding\": \"gzip\" });\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createGzip)(), res, onError);\n                break;\n            case \"deflate\":\n                res.writeHead(200, { \"content-encoding\": \"deflate\" });\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createDeflate)(), res, onError);\n                break;\n            default:\n                res.writeHead(200);\n                (0, stream_1.pipeline)(readStream, res, onError);\n        }\n    }\n    /**\n     * Binds socket.io to an engine.io instance.\n     *\n     * @param {engine.Server} engine engine.io (or compatible) server\n     * @return self\n     */\n    bind(engine) {\n        this.engine = engine;\n        this.engine.on(\"connection\", this.onconnection.bind(this));\n        return this;\n    }\n    /**\n     * Called with each incoming transport connection.\n     *\n     * @param {engine.Socket} conn\n     * @return self\n     * @private\n     */\n    onconnection(conn) {\n        debug(\"incoming connection with id %s\", conn.id);\n        const client = new client_1.Client(this, conn);\n        if (conn.protocol === 3) {\n            // @ts-ignore\n            client.connect(\"/\");\n        }\n        return this;\n    }\n    /**\n     * Looks up a namespace.\n     *\n     * @example\n     * // with a simple string\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // with a regex\n     * const dynamicNsp = io.of(/^\\/dynamic-\\d+$/).on(\"connection\", (socket) => {\n     *   const namespace = socket.nsp; // newNamespace.name === \"/dynamic-101\"\n     *\n     *   // broadcast to all clients in the given sub-namespace\n     *   namespace.emit(\"hello\");\n     * });\n     *\n     * @param name - nsp name\n     * @param fn optional, nsp `connection` ev handler\n     */\n    of(name, fn) {\n        if (typeof name === \"function\" || name instanceof RegExp) {\n            const parentNsp = new parent_namespace_1.ParentNamespace(this);\n            debug(\"initializing parent namespace %s\", parentNsp.name);\n            if (typeof name === \"function\") {\n                this.parentNsps.set(name, parentNsp);\n            }\n            else {\n                this.parentNsps.set((nsp, conn, next) => next(null, name.test(nsp)), parentNsp);\n            }\n            if (fn) {\n                // @ts-ignore\n                parentNsp.on(\"connect\", fn);\n            }\n            return parentNsp;\n        }\n        if (String(name)[0] !== \"/\")\n            name = \"/\" + name;\n        let nsp = this._nsps.get(name);\n        if (!nsp) {\n            debug(\"initializing namespace %s\", name);\n            nsp = new namespace_1.Namespace(this, name);\n            this._nsps.set(name, nsp);\n            if (name !== \"/\") {\n                // @ts-ignore\n                this.sockets.emitReserved(\"new_namespace\", nsp);\n            }\n        }\n        if (fn)\n            nsp.on(\"connect\", fn);\n        return nsp;\n    }\n    /**\n     * Closes server connection\n     *\n     * @param [fn] optional, called as `fn([err])` on error OR all conns closed\n     */\n    close(fn) {\n        for (const socket of this.sockets.sockets.values()) {\n            socket._onclose(\"server shutting down\");\n        }\n        this.engine.close();\n        // restore the Adapter prototype\n        (0, uws_1.restoreAdapter)();\n        if (this.httpServer) {\n            this.httpServer.close(fn);\n        }\n        else {\n            fn && fn();\n        }\n    }\n    /**\n     * Registers a middleware, which is a function that gets executed for every incoming {@link Socket}.\n     *\n     * @example\n     * io.use((socket, next) => {\n     *   // ...\n     *   next();\n     * });\n     *\n     * @param fn - the middleware function\n     */\n    use(fn) {\n        this.sockets.use(fn);\n        return this;\n    }\n    /**\n     * Targets a room when emitting.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n     * io.to(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms (a client will be notified at most once)\n     * io.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    to(room) {\n        return this.sockets.to(room);\n    }\n    /**\n     * Targets a room when emitting. Similar to `to()`, but might feel clearer in some cases:\n     *\n     * @example\n     * // disconnect all clients in the \"room-101\" room\n     * io.in(\"room-101\").disconnectSockets();\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    in(room) {\n        return this.sockets.in(room);\n    }\n    /**\n     * Excludes a room when emitting.\n     *\n     * @example\n     * // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n     * io.except(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms\n     * io.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    except(room) {\n        return this.sockets.except(room);\n    }\n    /**\n     * Sends a `message` event to all clients.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * io.send(\"hello\");\n     *\n     * // this is equivalent to\n     * io.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a `message` event to all clients. Alias of {@link send}.\n     *\n     * @return self\n     */\n    write(...args) {\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a message to the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * io.serverSideEmit(\"hello\", \"world\");\n     *\n     * io.on(\"hello\", (arg1) => {\n     *   console.log(arg1); // prints \"world\"\n     * });\n     *\n     * // acknowledgements (without binary content) are supported too:\n     * io.serverSideEmit(\"ping\", (err, responses) => {\n     *  if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * io.on(\"ping\", (cb) => {\n     *   cb(\"pong\");\n     * });\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments, which may include an acknowledgement callback at the end\n     */\n    serverSideEmit(ev, ...args) {\n        return this.sockets.serverSideEmit(ev, ...args);\n    }\n    /**\n     * Gets a list of socket ids.\n     *\n     * @deprecated this method will be removed in the next major release, please use {@link Server#serverSideEmit} or\n     * {@link Server#fetchSockets} instead.\n     */\n    allSockets() {\n        return this.sockets.allSockets();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * io.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    compress(compress) {\n        return this.sockets.compress(compress);\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n     * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n     * and is in the middle of a request-response cycle).\n     *\n     * @example\n     * io.volatile.emit(\"hello\"); // the clients may or may not receive it\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get volatile() {\n        return this.sockets.volatile;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients on this node\n     * io.local.emit(\"foo\", \"bar\");\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get local() {\n        return this.sockets.local;\n    }\n    /**\n     * Adds a timeout in milliseconds for the next operation.\n     *\n     * @example\n     * io.timeout(1000).emit(\"some-event\", (err, responses) => {\n     *   if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * @param timeout\n     */\n    timeout(timeout) {\n        return this.sockets.timeout(timeout);\n    }\n    /**\n     * Returns the matching socket instances.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // return all Socket instances\n     * const sockets = await io.fetchSockets();\n     *\n     * // return all Socket instances in the \"room1\" room\n     * const sockets = await io.in(\"room1\").fetchSockets();\n     *\n     * for (const socket of sockets) {\n     *   console.log(socket.id);\n     *   console.log(socket.handshake);\n     *   console.log(socket.rooms);\n     *   console.log(socket.data);\n     *\n     *   socket.emit(\"hello\");\n     *   socket.join(\"room1\");\n     *   socket.leave(\"room2\");\n     *   socket.disconnect();\n     * }\n     */\n    fetchSockets() {\n        return this.sockets.fetchSockets();\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     *\n     * // make all socket instances join the \"room1\" room\n     * io.socketsJoin(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room join the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsJoin([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsJoin(room) {\n        return this.sockets.socketsJoin(room);\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances leave the \"room1\" room\n     * io.socketsLeave(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room leave the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsLeave([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsLeave(room) {\n        return this.sockets.socketsLeave(room);\n    }\n    /**\n     * Makes the matching socket instances disconnect.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances disconnect (the connections might be kept alive for other namespaces)\n     * io.disconnectSockets();\n     *\n     * // make all socket instances in the \"room1\" room disconnect and close the underlying connections\n     * io.in(\"room1\").disconnectSockets(true);\n     *\n     * @param close - whether to close the underlying connection\n     */\n    disconnectSockets(close = false) {\n        return this.sockets.disconnectSockets(close);\n    }\n}\nexports.Server = Server;\n/**\n * Expose main namespace (/).\n */\nconst emitterMethods = Object.keys(events_1.EventEmitter.prototype).filter(function (key) {\n    return typeof events_1.EventEmitter.prototype[key] === \"function\";\n});\nemitterMethods.forEach(function (fn) {\n    Server.prototype[fn] = function () {\n        return this.sockets[fn].apply(this.sockets, arguments);\n    };\n});\nmodule.exports = (srv, opts) => new Server(srv, opts);\nmodule.exports.Server = Server;\nmodule.exports.Namespace = namespace_1.Namespace;\nmodule.exports.Socket = socket_1.Socket;\nvar socket_2 = require(\"./socket\");\n"],"mappings":"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b,CAAkB,SAAlB,EAA6B,GAAGD,IAAhC;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIE,KAAK,CAAC,GAAGF,IAAJ,EAAU;IACX,KAAK/G,OAAL,CAAagH,IAAb,CAAkB,SAAlB,EAA6B,GAAGD,IAAhC;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIG,cAAc,CAACC,EAAD,EAAK,GAAGJ,IAAR,EAAc;IACxB,OAAO,KAAK/G,OAAL,CAAakH,cAAb,CAA4BC,EAA5B,EAAgC,GAAGJ,IAAnC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIK,UAAU,GAAG;IACT,OAAO,KAAKpH,OAAL,CAAaoH,UAAb,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,QAAQ,CAACA,QAAD,EAAW;IACf,OAAO,KAAKrH,OAAL,CAAaqH,QAAb,CAAsBA,QAAtB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACgB,IAARC,QAAQ,GAAG;IACX,OAAO,KAAKtH,OAAL,CAAasH,QAApB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACa,IAALC,KAAK,GAAG;IACR,OAAO,KAAKvH,OAAL,CAAauH,KAApB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,OAAO,CAACA,OAAD,EAAU;IACb,OAAO,KAAKxH,OAAL,CAAawH,OAAb,CAAqBA,OAArB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,YAAY,GAAG;IACX,OAAO,KAAKzH,OAAL,CAAayH,YAAb,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,WAAW,CAACf,IAAD,EAAO;IACd,OAAO,KAAK3G,OAAL,CAAa0H,WAAb,CAAyBf,IAAzB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIgB,YAAY,CAAChB,IAAD,EAAO;IACf,OAAO,KAAK3G,OAAL,CAAa2H,YAAb,CAA0BhB,IAA1B,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIiB,iBAAiB,CAACvB,KAAK,GAAG,KAAT,EAAgB;IAC7B,OAAO,KAAKrG,OAAL,CAAa4H,iBAAb,CAA+BvB,KAA/B,CAAP;EACH;;AAtoBkD;;AAwoBvD/I,OAAO,CAACG,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;;AACA,MAAMoK,cAAc,GAAGhM,MAAM,CAAC+E,IAAP,CAAYzC,QAAQ,CAAC2J,YAAT,CAAsB5K,SAAlC,EAA6C6K,MAA7C,CAAoD,UAAUC,GAAV,EAAe;EACtF,OAAO,OAAO7J,QAAQ,CAAC2J,YAAT,CAAsB5K,SAAtB,CAAgC8K,GAAhC,CAAP,KAAgD,UAAvD;AACH,CAFsB,CAAvB;AAGAH,cAAc,CAACI,OAAf,CAAuB,UAAUxH,EAAV,EAAc;EACjChD,MAAM,CAACP,SAAP,CAAiBuD,EAAjB,IAAuB,YAAY;IAC/B,OAAO,KAAKT,OAAL,CAAaS,EAAb,EAAiByH,KAAjB,CAAuB,KAAKlI,OAA5B,EAAqCG,SAArC,CAAP;EACH,CAFD;AAGH,CAJD;;AAKAgI,MAAM,CAAC7K,OAAP,GAAiB,CAAC6B,GAAD,EAAMC,IAAN,KAAe,IAAI3B,MAAJ,CAAW0B,GAAX,EAAgBC,IAAhB,CAAhC;;AACA+I,MAAM,CAAC7K,OAAP,CAAeG,MAAf,GAAwBA,MAAxB;AACA0K,MAAM,CAAC7K,OAAP,CAAeC,SAAf,GAA2Ba,WAAW,CAACb,SAAvC;AACA4K,MAAM,CAAC7K,OAAP,CAAeE,MAAf,GAAwBiB,QAAQ,CAACjB,MAAjC;;AACA,IAAI4K,QAAQ,GAAGzK,OAAO,CAAC,UAAD,CAAtB"},"metadata":{},"sourceType":"script"}