{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/SystemForLinux/Desktop/f2/code/chat/chatangular/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uServer = void 0;\n\nconst debug_1 = require(\"debug\");\n\nconst server_1 = require(\"./server\");\n\nconst transports_uws_1 = require(\"./transports-uws\");\n\nconst debug = (0, debug_1.default)(\"engine:uws\");\n\nclass uServer extends server_1.BaseServer {\n  init() {}\n\n  cleanup() {}\n  /**\n   * Prepares a request by processing the query string.\n   *\n   * @api private\n   */\n\n\n  prepare(req, res) {\n    req.method = req.getMethod().toUpperCase();\n    const params = new URLSearchParams(req.getQuery());\n    req._query = Object.fromEntries(params.entries());\n    req.headers = {};\n    req.forEach((key, value) => {\n      req.headers[key] = value;\n    });\n    req.connection = {\n      remoteAddress: Buffer.from(res.getRemoteAddressAsText()).toString()\n    };\n    res.onAborted(() => {\n      debug(\"response has been aborted\");\n    });\n  }\n\n  createTransport(transportName, req) {\n    return new transports_uws_1.default[transportName](req);\n  }\n  /**\n   * Attach the engine to a µWebSockets.js server\n   * @param app\n   * @param options\n   */\n\n\n  attach(app\n  /* : TemplatedApp */\n  , options = {}) {\n    const path = (options.path || \"/engine.io\").replace(/\\/$/, \"\") + \"/\";\n    app.any(path, this.handleRequest.bind(this)) //\n    .ws(path, {\n      compression: options.compression,\n      idleTimeout: options.idleTimeout,\n      maxBackpressure: options.maxBackpressure,\n      maxPayloadLength: this.opts.maxHttpBufferSize,\n      upgrade: this.handleUpgrade.bind(this),\n      open: ws => {\n        ws.transport.socket = ws;\n        ws.transport.writable = true;\n        ws.transport.emit(\"drain\");\n      },\n      message: (ws, message, isBinary) => {\n        ws.transport.onData(isBinary ? message : Buffer.from(message).toString());\n      },\n      close: (ws, code, message) => {\n        ws.transport.onClose(code, message);\n      }\n    });\n  }\n\n  handleRequest(res, req) {\n    debug('handling \"%s\" http request \"%s\"', req.getMethod(), req.getUrl());\n    this.prepare(req, res);\n    req.res = res;\n\n    const callback = (errorCode, errorContext) => {\n      if (errorCode !== undefined) {\n        this.emit(\"connection_error\", {\n          req,\n          code: errorCode,\n          message: server_1.Server.errorMessages[errorCode],\n          context: errorContext\n        });\n        this.abortRequest(req.res, errorCode, errorContext);\n        return;\n      }\n\n      if (req._query.sid) {\n        debug(\"setting new request for existing client\");\n\n        this.clients[req._query.sid].transport.onRequest(req);\n      } else {\n        const closeConnection = (errorCode, errorContext) => this.abortRequest(res, errorCode, errorContext);\n\n        this.handshake(req._query.transport, req, closeConnection);\n      }\n    };\n\n    if (this.corsMiddleware) {\n      // needed to buffer headers until the status is computed\n      req.res = new ResponseWrapper(res);\n      this.corsMiddleware.call(null, req, req.res, () => {\n        this.verify(req, false, callback);\n      });\n    } else {\n      this.verify(req, false, callback);\n    }\n  }\n\n  handleUpgrade(res, req, context) {\n    var _this = this;\n\n    debug(\"on upgrade\");\n    this.prepare(req, res); // @ts-ignore\n\n    req.res = res;\n    this.verify(req, true, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (errorCode, errorContext) {\n        if (errorCode) {\n          _this.emit(\"connection_error\", {\n            req,\n            code: errorCode,\n            message: server_1.Server.errorMessages[errorCode],\n            context: errorContext\n          });\n\n          _this.abortRequest(res, errorCode, errorContext);\n\n          return;\n        }\n\n        const id = req._query.sid;\n        let transport;\n\n        if (id) {\n          const client = _this.clients[id];\n\n          if (!client) {\n            debug(\"upgrade attempt for closed client\");\n            res.close();\n          } else if (client.upgrading) {\n            debug(\"transport has already been trying to upgrade\");\n            res.close();\n          } else if (client.upgraded) {\n            debug(\"transport had already been upgraded\");\n            res.close();\n          } else {\n            debug(\"upgrading existing transport\");\n            transport = _this.createTransport(req._query.transport, req);\n            client.maybeUpgrade(transport);\n          }\n        } else {\n          transport = yield _this.handshake(req._query.transport, req, (errorCode, errorContext) => _this.abortRequest(res, errorCode, errorContext));\n\n          if (!transport) {\n            return;\n          }\n        }\n\n        res.upgrade({\n          transport\n        }, req.getHeader(\"sec-websocket-key\"), req.getHeader(\"sec-websocket-protocol\"), req.getHeader(\"sec-websocket-extensions\"), context);\n      });\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  abortRequest(res, errorCode, errorContext) {\n    const statusCode = errorCode === server_1.Server.errors.FORBIDDEN ? \"403 Forbidden\" : \"400 Bad Request\";\n    const message = errorContext && errorContext.message ? errorContext.message : server_1.Server.errorMessages[errorCode];\n    res.writeStatus(statusCode);\n    res.writeHeader(\"Content-Type\", \"application/json\");\n    res.end(JSON.stringify({\n      code: errorCode,\n      message\n    }));\n  }\n\n}\n\nexports.uServer = uServer;\n\nclass ResponseWrapper {\n  constructor(res) {\n    this.res = res;\n    this.statusWritten = false;\n    this.headers = [];\n  }\n\n  set statusCode(status) {\n    this.writeStatus(status === 200 ? \"200 OK\" : \"204 No Content\");\n  }\n\n  setHeader(key, value) {\n    this.writeHeader(key, value);\n  } // needed by vary: https://github.com/jshttp/vary/blob/5d725d059b3871025cf753e9dfa08924d0bcfa8f/index.js#L134\n\n\n  getHeader() {}\n\n  writeStatus(status) {\n    this.res.writeStatus(status);\n    this.statusWritten = true;\n    this.writeBufferedHeaders();\n  }\n\n  writeHeader(key, value) {\n    if (key === \"Content-Length\") {\n      // the content length is automatically added by uWebSockets.js\n      return;\n    }\n\n    if (this.statusWritten) {\n      this.res.writeHeader(key, value);\n    } else {\n      this.headers.push([key, value]);\n    }\n  }\n\n  writeBufferedHeaders() {\n    this.headers.forEach(([key, value]) => {\n      this.res.writeHeader(key, value);\n    });\n  }\n\n  end(data) {\n    if (!this.statusWritten) {\n      // status will be inferred as \"200 OK\"\n      this.writeBufferedHeaders();\n    }\n\n    this.res.end(data);\n  }\n\n  onData(fn) {\n    this.res.onData(fn);\n  }\n\n  onAborted(fn) {\n    this.res.onAborted(fn);\n  }\n\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","uServer","debug_1","require","server_1","transports_uws_1","debug","default","BaseServer","init","cleanup","prepare","req","res","method","getMethod","toUpperCase","params","URLSearchParams","getQuery","_query","fromEntries","entries","headers","forEach","key","connection","remoteAddress","Buffer","from","getRemoteAddressAsText","toString","onAborted","createTransport","transportName","attach","app","options","path","replace","any","handleRequest","bind","ws","compression","idleTimeout","maxBackpressure","maxPayloadLength","opts","maxHttpBufferSize","upgrade","handleUpgrade","open","transport","socket","writable","emit","message","isBinary","onData","close","code","onClose","getUrl","callback","errorCode","errorContext","undefined","Server","errorMessages","context","abortRequest","sid","clients","onRequest","closeConnection","handshake","corsMiddleware","ResponseWrapper","call","verify","id","client","upgrading","upgraded","maybeUpgrade","getHeader","statusCode","errors","FORBIDDEN","writeStatus","writeHeader","end","JSON","stringify","constructor","statusWritten","status","setHeader","writeBufferedHeaders","push","data","fn"],"sources":["C:/Users/SystemForLinux/Desktop/f2/code/chat/chatangular/node_modules/engine.io/build/userver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uServer = void 0;\nconst debug_1 = require(\"debug\");\nconst server_1 = require(\"./server\");\nconst transports_uws_1 = require(\"./transports-uws\");\nconst debug = (0, debug_1.default)(\"engine:uws\");\nclass uServer extends server_1.BaseServer {\n    init() { }\n    cleanup() { }\n    /**\n     * Prepares a request by processing the query string.\n     *\n     * @api private\n     */\n    prepare(req, res) {\n        req.method = req.getMethod().toUpperCase();\n        const params = new URLSearchParams(req.getQuery());\n        req._query = Object.fromEntries(params.entries());\n        req.headers = {};\n        req.forEach((key, value) => {\n            req.headers[key] = value;\n        });\n        req.connection = {\n            remoteAddress: Buffer.from(res.getRemoteAddressAsText()).toString()\n        };\n        res.onAborted(() => {\n            debug(\"response has been aborted\");\n        });\n    }\n    createTransport(transportName, req) {\n        return new transports_uws_1.default[transportName](req);\n    }\n    /**\n     * Attach the engine to a µWebSockets.js server\n     * @param app\n     * @param options\n     */\n    attach(app /* : TemplatedApp */, options = {}) {\n        const path = (options.path || \"/engine.io\").replace(/\\/$/, \"\") + \"/\";\n        app\n            .any(path, this.handleRequest.bind(this))\n            //\n            .ws(path, {\n            compression: options.compression,\n            idleTimeout: options.idleTimeout,\n            maxBackpressure: options.maxBackpressure,\n            maxPayloadLength: this.opts.maxHttpBufferSize,\n            upgrade: this.handleUpgrade.bind(this),\n            open: ws => {\n                ws.transport.socket = ws;\n                ws.transport.writable = true;\n                ws.transport.emit(\"drain\");\n            },\n            message: (ws, message, isBinary) => {\n                ws.transport.onData(isBinary ? message : Buffer.from(message).toString());\n            },\n            close: (ws, code, message) => {\n                ws.transport.onClose(code, message);\n            }\n        });\n    }\n    handleRequest(res, req) {\n        debug('handling \"%s\" http request \"%s\"', req.getMethod(), req.getUrl());\n        this.prepare(req, res);\n        req.res = res;\n        const callback = (errorCode, errorContext) => {\n            if (errorCode !== undefined) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: server_1.Server.errorMessages[errorCode],\n                    context: errorContext\n                });\n                this.abortRequest(req.res, errorCode, errorContext);\n                return;\n            }\n            if (req._query.sid) {\n                debug(\"setting new request for existing client\");\n                this.clients[req._query.sid].transport.onRequest(req);\n            }\n            else {\n                const closeConnection = (errorCode, errorContext) => this.abortRequest(res, errorCode, errorContext);\n                this.handshake(req._query.transport, req, closeConnection);\n            }\n        };\n        if (this.corsMiddleware) {\n            // needed to buffer headers until the status is computed\n            req.res = new ResponseWrapper(res);\n            this.corsMiddleware.call(null, req, req.res, () => {\n                this.verify(req, false, callback);\n            });\n        }\n        else {\n            this.verify(req, false, callback);\n        }\n    }\n    handleUpgrade(res, req, context) {\n        debug(\"on upgrade\");\n        this.prepare(req, res);\n        // @ts-ignore\n        req.res = res;\n        this.verify(req, true, async (errorCode, errorContext) => {\n            if (errorCode) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: server_1.Server.errorMessages[errorCode],\n                    context: errorContext\n                });\n                this.abortRequest(res, errorCode, errorContext);\n                return;\n            }\n            const id = req._query.sid;\n            let transport;\n            if (id) {\n                const client = this.clients[id];\n                if (!client) {\n                    debug(\"upgrade attempt for closed client\");\n                    res.close();\n                }\n                else if (client.upgrading) {\n                    debug(\"transport has already been trying to upgrade\");\n                    res.close();\n                }\n                else if (client.upgraded) {\n                    debug(\"transport had already been upgraded\");\n                    res.close();\n                }\n                else {\n                    debug(\"upgrading existing transport\");\n                    transport = this.createTransport(req._query.transport, req);\n                    client.maybeUpgrade(transport);\n                }\n            }\n            else {\n                transport = await this.handshake(req._query.transport, req, (errorCode, errorContext) => this.abortRequest(res, errorCode, errorContext));\n                if (!transport) {\n                    return;\n                }\n            }\n            res.upgrade({\n                transport\n            }, req.getHeader(\"sec-websocket-key\"), req.getHeader(\"sec-websocket-protocol\"), req.getHeader(\"sec-websocket-extensions\"), context);\n        });\n    }\n    abortRequest(res, errorCode, errorContext) {\n        const statusCode = errorCode === server_1.Server.errors.FORBIDDEN\n            ? \"403 Forbidden\"\n            : \"400 Bad Request\";\n        const message = errorContext && errorContext.message\n            ? errorContext.message\n            : server_1.Server.errorMessages[errorCode];\n        res.writeStatus(statusCode);\n        res.writeHeader(\"Content-Type\", \"application/json\");\n        res.end(JSON.stringify({\n            code: errorCode,\n            message\n        }));\n    }\n}\nexports.uServer = uServer;\nclass ResponseWrapper {\n    constructor(res) {\n        this.res = res;\n        this.statusWritten = false;\n        this.headers = [];\n    }\n    set statusCode(status) {\n        this.writeStatus(status === 200 ? \"200 OK\" : \"204 No Content\");\n    }\n    setHeader(key, value) {\n        this.writeHeader(key, value);\n    }\n    // needed by vary: https://github.com/jshttp/vary/blob/5d725d059b3871025cf753e9dfa08924d0bcfa8f/index.js#L134\n    getHeader() { }\n    writeStatus(status) {\n        this.res.writeStatus(status);\n        this.statusWritten = true;\n        this.writeBufferedHeaders();\n    }\n    writeHeader(key, value) {\n        if (key === \"Content-Length\") {\n            // the content length is automatically added by uWebSockets.js\n            return;\n        }\n        if (this.statusWritten) {\n            this.res.writeHeader(key, value);\n        }\n        else {\n            this.headers.push([key, value]);\n        }\n    }\n    writeBufferedHeaders() {\n        this.headers.forEach(([key, value]) => {\n            this.res.writeHeader(key, value);\n        });\n    }\n    end(data) {\n        if (!this.statusWritten) {\n            // status will be inferred as \"200 OK\"\n            this.writeBufferedHeaders();\n        }\n        this.res.end(data);\n    }\n    onData(fn) {\n        this.res.onData(fn);\n    }\n    onAborted(fn) {\n        this.res.onAborted(fn);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}